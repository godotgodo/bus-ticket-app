<?php

use CodeIgniter\Router\RouteCollection;

/**
 * @var RouteCollection $routes
 */

$routes->get('/', 'HomeController::index');
$routes->get('login', 'LoginController::index');
$routes->post('login', 'LoginController::auth');
$routes->post('logout', 'LoginController::logout');
$routes->get('register', 'RegisterController::index');
$routes->post('register', 'RegisterController::save');
$routes->group('user', static function ($routes) {
    $routes->get('tickets', 'UserController::getTickets');
    $routes->get('reservations', 'UserController::getReservations');
    $routes->post('deleteReservation/(:num)', 'UserController::deleteReservation/$1');
    $routes->post('addToReservation','UserController::addToReservation');
    $routes->post('releaseTheTicket/(:num)','UserController::releaseTheTicket/$1');
});
$routes->group('process',static function ($routes){
    $routes->get('selectGoingSeats','ProcessController::getSelectGoingSeats');
    $routes->post('selectGoingSeats','ProcessController::selectGoingSeats');
    $routes->get('selectReturningSeats','ProcessController::getSelectReturningSeats');
    $routes->post('selectReturningSeats','ProcessController::selectReturningSeats');
    $routes->get('payment','ProcessController::getPayment');
    $routes->post('payment','ProcessController::payment');
});
$routes->post('selectRoute','RouteController::selectRoute');
$routes->get('searchTickets','TicketController::searchTickets');
$routes->get('routes','RouteController::getRoutes');

$routes->get('seatselect', 'HomeController::seats');
$routes->post('seats', 'HomeController::seatSelect');



<?php

namespace App\Controllers;

use App\Models\Bus;
use App\Models\Route;
use App\Models\RouteTicket;
use App\Models\Ticket;

class HomeController extends BaseController
{
    public function index(): string
    {
        return view('home');
    }
    public function seats()
    {
        return view('seats');
    }
    public function seatSelect()
    {
       // echo $this->request->getPost('seatNumbers');
        if($this->request->getPost('isRoundTrip'))
        {
            if(!session()->has('goingSeats'))
            {
                echo "çalıştı";
                session()->set('goingSeats', $this->request->getPost('seatNumbers'));
                return redirect()->back()->with('return',"Dönüş İçin Koltuk Seçiniz.");
            }
            else{
                echo "Gidiş Numaraları: ".session()->get('goingSeats'). " Dönüş Numaraları: ".$this->request->getPost('seatNumbers');
                return;
            }
        }
        echo "arıza var";
        return;
    }
}


<?php

namespace App\Controllers;

use App\Models\User;

class LoginController extends BaseController
{
    public function index(): string
    {
        return view('login');
    }
    public function auth()
    {
        $userModel = new User();
        $validation = \Config\Services::validation();
        $rules = [
            'email'    => 'required|valid_email',
            'password' => 'required',
        ];
        if (!$validation->setRules($rules)->run($this->request->getPost())) {
            return redirect()->back()->withInput()->with('errors', $validation->getErrors());
        }

        $email = $this->request->getPost('email');
        $password = $this->request->getPost('password');

        $userModel = new User();

        $user = $userModel->where('email', $email)->first();

        if ($user && password_verify($password, $user['password'])) {

            $session = session();
            $session->set([
                'user_id' => $user['user_id'],
                'email' => $user['email'],
                'balance' => $userModel->getWallet($user['user_id'])['balance'],
                'logged_in' => true,
                'is_admin' => $user['is_admin']
            ]);

            //view içinde $session->get('user_id') denerek user idsine ulaşılabilir.
            return redirect()->to('/');
        } else {
            return redirect()->to('/login')->with('errors', ['Invalid credentials.']);
        }
    }

    public function logout()
    {
        $session = session();
        $session->destroy();

        return redirect()->to('/login');
    }
}

<?php

namespace App\Controllers;

use PHPMailer\PHPMailer\PHPMailer;
use PHPMailer\PHPMailer\Exception;

use App\Models\Ticket;

use function PHPSTORM_META\type;

class ProcessController extends BaseController
{
    public function getSelectGoingSeats()
    {
        // Sessiondan id alınıp dbden sorgulama yapılıp bilgiler viewe iletilecek;
        $data = [
            'event' => 'select_going_seats',
            'freeSeats' => [1, 2, 3, 4, 5, 10]
        ];
        return view('process', $data);
    }

    public function getSelectReturningSeats()
    {
        $data = [
            'route_id' => '5',
            'datetime' => '2023-01-01',
            'event' => 'select_returning_seats',
        ];
        return view('process', $data);
    }

    public function getPayment()
    {
        $data = [
            'event' => 'payment',
            'tickets' => [
                [
                    'startingDestination' => 'İstanbul',
                    'endingDestination' => 'Ankara',
                    'datetime' => '2024-01-01',
                    'busPlate' => '34 XYZ 34',
                    'price' => 300,
                    'roundTrip' => false
                ],
                [
                    'startingDestination' => 'Kocaeli',
                    'endingDestination' => 'Ankara',
                    'datetime' => '2024-01-02',
                    'busPlate' => '34 XYZ 41',
                    'price' => 500,
                    'roundTrip' => true
                ]
            ],
            'discountPercentage' => 15
            //     // session ile totalPrice kaydedilmeli ve aşağıdaki payment metodunda kullanılmalı
            //     return $this->getPayment();
        ];
        $data['subTotal'] = $this->calculateSubTotal($data);
        $data['discountAmount'] = $this->applyDiscount($data);
        $data['totalPrice'] = $data['subTotal'] - $data['discountAmount'];

        return view('process', $data);
    }

    public function selectGoingSeats()
    {
        $selectedSeatsString = $this->request->getPost('selectGoingSeats');
        if ($selectedSeatsString != null && is_string($selectedSeatsString)) {
            $selectedSeats = explode('|', $selectedSeatsString);
            //sessiona kaydedildi
        }

        return $this->getSelectReturningSeats();
    }

    public function selectReturningSeats()
    {
        $selectedSeatsString = $this->request->getPost('selectReturningSeats');
        if ($selectedSeatsString != null && is_string($selectedSeatsString)) {
            $selectedSeats = explode('|', $selectedSeatsString);
            //sessiona kaydedildi
        }

        return $this->getPayment();
    }

    public function payment()
    {
        $card = [
            'name' => $this->request->getPost('name'),
            'number' => $this->request->getPost('number'),
            'expiration' => $this->request->getPost('expiration'),
            'cvv' => $this->request->getPost('cvv'),
        ];

        // session
        if ($this->validateCreditCard($card['number']) && $this->validateExpiration($card['expiration']) && $this->validateCVV($card['cvv'])) {
            $totalPrice = 300;
            // PNR oluşturma işlemi
            $ticketModel = new Ticket();
            $ticket_id = 1; // Örnek olarak bir bilet ID'si
            $pnrCode = $ticketModel->generatePnr($ticket_id);

            // E-posta gönderme işlemi
            $mail = new PHPMailer(true); // Exceptionları yakalamak için true kullanın

            try {
                // SMTP ayarları
                $mail->isSMTP();
                $mail->Host = 'smtp.gmail.com';
                $mail->SMTPAuth = true;
                $mail->Username = 'yyazlab@gmail.com';
                $mail->Password = 'owtx ypxr tevp xokl';
                $mail->SMTPSecure = 'tls';
                $mail->Port = 587;

                // Alıcı ve gönderici bilgileri
                $mail->setFrom('yyazlab@gmail.com', 'Yazlab');
                $mail->addAddress('serhat.akcadag@gmail.com', 'Serhat Akçadağ');

                // E-posta içeriği
                $mail->isHTML(true); // HTML içerik kullanılacaksa true
                $mail->Subject = 'PNR Numarası';
                $mail->Body    = 'Ödemeniz başarıyla gerçekleştirildi. PNR Numaranız: ' . $pnrCode;

                $mail->send();

                return view('success', ['pnrCode' => $pnrCode]);
            } catch (Exception $e) {
                return "E-posta gönderilemedi. Hata: {$mail->ErrorInfo}";
            }
        } else {
            return "Geçersiz kredi kartı bilgileri.";
        }
    }
    function calculateSubTotal($data)
    {
        $subTotal = 0;
        foreach ($data['tickets'] as $ticket) {
            $subTotal += $ticket['price'];
        }
        return $subTotal;
    }

    function applyDiscount($data)
    {
        $subTotal = $data['subTotal'];
        $discountPercentage = $data['discountPercentage'];
        $discountAmount = $subTotal * ($discountPercentage / 100);
        return $discountAmount;
    }

    //Luhn Algorithm
    private function validateCreditCard($cardNumber)
    {
        $cardNumber = preg_replace('/\D/', '', $cardNumber);
        $sum = 0;
        $numDigits = strlen($cardNumber);
        $parity = $numDigits % 2;

        for ($i = 0; $i < $numDigits; $i++) {
            $digit = $cardNumber[$i];
            if ($i % 2 == $parity) {
                $digit *= 2;
                if ($digit > 9) {
                    $digit -= 9;
                }
            }
            $sum += $digit;
        }
        return ($sum % 10 == 0);
    }

    private function validateExpiration($expiration)
    {
        $today = date("m/Y");
        $expiration = str_replace(' ', '', $expiration);
        return (strtotime($expiration) > strtotime($today));
    }

    private function validateCVV($cvv)
    {
        return (strlen($cvv) == 3);
    }
}


<?php

namespace App\Controllers;

use App\Models\User;

class RegisterController extends BaseController
{
    public function index(): string
    {
        return view('register');
    }

    public function save()
    {
        $userModel = new User();
        $validation = \Config\Services::validation();
        $rules = [
            'name' => 'required',
            'email'    => 'required|valid_email',
            'password' => 'required|min_length[6]|max_length[24]',
            'gender' => 'required',
            'age' => 'required',
            'job' => 'required',
            'identity_number' => 'required',
            'phone_number' => 'required'
        ];
        if (!$validation->setRules($rules)->run($this->request->getPost())) {
            return redirect()->back()->withInput()->with('errors', $validation->getErrors());
        }
        if($this->request->getPost('password') != $this->request->getPost('password_confirmation'))
        {
           return redirect()->to('register')->with('error', "Password doesn't match with confirmation!");
        }
        $user = [
            'name' => $this->request->getPost('name'),
            'phone_number' => $this->request->getPost('phone_number'),
            'identity_number' => $this->request->getPost('identity_number'),
            'gender' => $this->request->getPost('gender') == "female" ? 0 : 1,
            'age' => $this->request->getPost('age'),
            'job' => $this->request->getPost('job'),
            'passport_number' => $this->request->getPost('passport_number'),
            'email' => $this->request->getPost('email'),
            'password' => password_hash($this->request->getPost('password'), PASSWORD_DEFAULT),
            'is_admin' => 0
        ];
        if ($userModel->insert($user, false))
        {
            $userModel->createWallet($userModel->getInsertID());
            return redirect()->to('login');
        }
        else{
            return redirect()->back()->withInput()->with('createError', "Error occured on create.");
        }
    }

}

<?php

namespace App\Controllers;

class RouteController extends BaseController
{
    public function getRoutes(){
        $data=[
                'routes'=>[[
                    'route-id'=>1,
                    'startingDestination'=>'Ankara',
                    'endingDestination'=>'İstanbul',
                    'datetime'=>'2023-01-01',
                    'freeSeats'=>25,
                ],
                [
                    'route-id'=>2, 
                    'startingDestination'=>'Kocaeli',
                    'endingDestination'=>'Ankara',
                    'datetime'=>'2023-01-02',
                    'freeSeats'=>10,
                ],
                [
                    'route-id'=>3,
                    'startingDestination'=>'Ankara',
                    'endingDestination'=>'Kocaeli',
                    'datetime'=>'2023-01-02',
                    'freeSeats'=>10,
                ]
                ]
        ];
        return view('routes',$data);
    }

    public function getRouteSeats(){
        $route_id=$this->request->getVar('route-id');
        return $route_id;
    }

    public function selectRoute(){
        $route_id=$this->request->getVar('route-id');
        // Session starting
        return redirect()->to('/process/selectGoingSeats');
    }
};

<?php

namespace App\Controllers;

use App\Models\Route;

class TicketController extends BaseController
{
    public function searchTickets()
    {
        $starting_destination = $this->request->getGet('starting_destination');
        $ending_destination = $this->request->getGet('ending_destination');
        $going_date = $this->request->getGet('going_date');
        $returning_date = $this->request->getGet('returning_date');

        $routeModel = new Route();
        $tickets = $routeModel->searchTickets($starting_destination, $ending_destination, $going_date, $returning_date);

        return view('ticket_search_results', [
            'starting_destination' => $starting_destination,
            'ending_destination' => $ending_destination,
            'going_date' => $going_date,
            'returning_date' => $returning_date,
            'tickets' => $tickets,
        ]);
    }
}

<?php

namespace App\Controllers;

class UserController extends BaseController
{
    public function index()
    { 
    }
    public function getTickets() :string {
        $data=[
            'currentTickets'=>[
                [
                    'ticket_id'=>1,
                    'startingDestination'=>'İstanbul',
                    'endingDestination'=>'Ankara',
                    'datetime'=>'2024-01-01',
                    'busPlate'=>'34 XYZ 34',
                    'price'=> 300,
                    'roundTrip'=>false
                ],
                [
                    'ticket_id'=>2,
                    'startingDestination'=>'Kocaeli',
                    'endingDestination'=>'Ankara',
                    'datetime'=>'2024-01-02',
                    'busPlate'=>'34 XYZ 41',
                    'price'=> 500,
                    'roundTrip'=>true
                ]
            ],
            'oldTickets'=>[
                [
                    'ticket_id'=>3,
                    'startingDestination'=>'İstanbul',
                    'endingDestination'=>'Ankara',
                    'datetime'=>'2024-01-01',
                    'busPlate'=>'34 XYZ 34',
                    'price'=> 300,
                    'roundTrip'=>false
                ],
                [
                    'ticket_id'=>4,
                    'startingDestination'=>'Kocaeli',
                    'endingDestination'=>'Ankara',
                    'datetime'=>'2024-01-02',
                    'busPlate'=>'34 XYZ 41',
                    'price'=> 500,
                    'roundTrip'=>true
                ]
            ],
        ];
        return view('user/tickets', $data);
    }
    public function getReservations() :string {
        $data=[
            'reservations'=>[
                [
                    'reservation_id'=>10,
                    'startingDestination'=>'İstanbul',
                    'endingDestination'=>'Ankara',
                    'datetime'=>'2024-01-01',
                    'busPlate'=>'34 XYZ 34',
                    'price'=> 300,
                    'roundTrip'=>false,
                    'seats'=>[3,4]
                ],
                [
                    'reservation_id'=>15,
                    'startingDestination'=>'Kocaeli',
                    'endingDestination'=>'Ankara',
                    'datetime'=>'2024-01-02',
                    'busPlate'=>'34 XYZ 41',
                    'price'=> 500,
                    'roundTrip'=>true,
                    'seats'=>[10]
                ]
            ],
        ];
        return view('user/reservations', $data);
    }
    public function deleteReservation($reservation_id){
        return $reservation_id;
    }
    public function addToReservation(){
        $data=[
            'going'=>[
                'route_id'=>$this->request->getPost('route-id'),
                'seats'=>[1,2]
            ],
            'returning'=>[
                'route_id'=>$this->request->getPost('route-id'),
                'seats'=>[1,2]
            ]
        ];
        return $data['going']['route_id'];
    }

    public function releaseTheTicket($ticket_id){
        return $ticket_id.'idli ticket açığa alınmak isteniyor';
    }
}

<?php

namespace App\Database\Migrations;

use CodeIgniter\Database\Migration;

class CreateUsersTable extends Migration
{
    public function up()
    {
        $this->forge->addField([
            'user_id' => [
                'type' => 'INT',
                'constraint' => 5,
                'unsigned' => true,
                'auto_increment' => true,
            ],
            'name' => [
                'type' => 'VARCHAR',
                'constraint' => 100,
            ],
            'email' => [
                'type' => 'VARCHAR',
                'constraint' => 255,
            ],
            'password' => [
                'type' => 'VARCHAR',
                'constraint' => 255,
            ],
            'identity_number' => [
                'type' => 'VARCHAR',
                'constraint' => 255,
            ],
            'phone_number' => [
                'type' => 'VARCHAR',
                'constraint' => 255,
            ],
            'gender' => [
                'type' => 'TINYINT',
                'constraint' => 1,
            ],
            'age' => [
                'type' => 'INT',
                'constraint' => 5
            ],
            'job' => [
                'type' => 'VARCHAR',
                'constraint' => 255,
            ],
            'is_admin' => [
                'type' => 'TINYINT',
                'constraint' => 1,
            ],
            'passport_number' => [
                'type' => 'VARCHAR',
                'constraint' => 255,
            ],
            'created_at' => [
                'type' => 'DATETIME',
                'null' => true,
            ],
            'updated_at' => [
                'type' => 'DATETIME',
                'null' => true,
            ],
        ]);
        $this->forge->addPrimaryKey('user_id');
        $this->forge->createTable('users');
    }

    public function down()
    {
        $this->forge->dropTable('users');
    }
}


<?php

namespace App\Database\Migrations;

use CodeIgniter\Database\Migration;

class CreateDestinationsTable extends Migration
{
    public function up()
    {
        $this->forge->addField([
            'destination_id' => [
                'type'           => 'INT',
                'constraint'     => 11,
                'unsigned'       => TRUE,
                'auto_increment' => TRUE
            ],
            'starting_destination' => [
                'type'       => 'VARCHAR',
                'constraint' => 255
            ],
            'ending_destination' => [
                'type'       => 'VARCHAR',
                'constraint' => 255
            ],
            'created_at' => [
                'type' => 'TIMESTAMP',
                'null' => TRUE
            ],
            'updated_at' => [
                'type' => 'TIMESTAMP',
                'null' => TRUE
            ],
        ]);
        $this->forge->addPrimaryKey('destination_id');
        $this->forge->createTable('destinations');
    }

    public function down()
    {
        $this->forge->dropTable('destinations');
    }
}

<?php

namespace App\Database\Migrations;

use CodeIgniter\Database\Migration;

class CreateTicketsTable extends Migration
{
    public function up()
    {
        $this->forge->addField([
            'ticket_id' => [
                'type'           => 'INT',
                'constraint'     => 11,
                'unsigned'       => TRUE,
                'auto_increment' => TRUE
            ],
            'user_id' => [
                'type'           => 'INT',
                'constraint'     => 11,
                'unsigned'       => TRUE,
            ],
            'pnr_number' => [
                'type'       => 'VARCHAR',
                'constraint' => 255
            ],
            'status' => [
                'type'       => 'INT',
                'constraint' => 5,
                'unsigned'   => TRUE
            ],
            'price' => [
                'type' => 'DECIMAL',
                'constraint' => '10,2'
            ],
            'is_round_trip' => [
                'type' => 'TINYINT',
                'constraint' => 1,
            ],
            'created_at' => [
                'type' => 'TIMESTAMP',
                'null' => TRUE
            ],
            'updated_at' => [
                'type' => 'TIMESTAMP',
                'null' => TRUE
            ],
        ]);
        $this->forge->addPrimaryKey('ticket_id');
        $this->forge->addForeignKey('user_id', 'users', 'user_id', "", "CASCADE");
        $this->forge->createTable('tickets');
    }

    public function down()
    {
        $this->forge->dropTable('tickets');
    }
}

<?php

namespace App\Database\Migrations;

use CodeIgniter\Database\Migration;

class AddBusesTable extends Migration
{
    public function up()
    {
        $this->forge->addField([
            'bus_id' => [
                'type'           => 'INT',
                'constraint'     => 11,
                'unsigned'       => TRUE,
                'auto_increment' => TRUE
            ],
            'plate' => [
                'type'       => 'VARCHAR',
                'constraint' => 255
            ],
            'created_at' => [
                'type' => 'TIMESTAMP',
                'null' => TRUE
            ],
            'updated_at' => [
                'type' => 'TIMESTAMP',
                'null' => TRUE
            ],
        ]);
        $this->forge->addPrimaryKey('bus_id');
        $this->forge->createTable('buses');
    }

    public function down()
    {
        $this->forge->dropTable('buses');
    }
}

<?php

namespace App\Database\Migrations;

use CodeIgniter\Database\Migration;

class CreateWalletsTable extends Migration
{
    public function up()
    {
        $this->forge->addField([
            'wallet_id' => [
                'type' => 'INT',
                'constraint' => 5,
                'unsigned' => true,
                'auto_increment' => true,
            ],
            'user_id' => [
                'type' => 'INT',
                'constraint' => 5,
                'unsigned' => true,
                'unique' => true
            ],
            'balance' => [
                'type' => 'DECIMAL',
                'constraint' => '10,2',
                'null' => false,
                'default'=> 0
            ],
            'created_at' => [
                'type' => 'TIMESTAMP',
                'null' => TRUE
            ],
            'updated_at' => [
                'type' => 'TIMESTAMP',
                'null' => TRUE
            ],
        ]);

        $this->forge->addPrimaryKey('wallet_id');
        $this->forge->addForeignKey('user_id', 'users', 'user_id', '', 'CASCADE');
        $this->forge->createTable('wallets');
        $this->forge->addUniqueKey('user_id');
    }

    public function down()
    {
        $this->forge->dropTable('wallets');
    }
}

<?php

namespace App\Database\Migrations;

use CodeIgniter\Database\Migration;

class CreateRoutesTable extends Migration
{
    public function up()
    {
        $this->forge->addField([
            'route_id' => [
                'type' => 'INT',
                'constraint' => 5,
                'unsigned' => true,
                'auto_increment' => true,
            ],
            'arrival_date' => [
                'type' => 'DATETIME',
                'null' => false,
            ],
            'destination_id' => [
                'type' => 'INT',
                'constraint' => 5,
                'unsigned' => true,
            ],
            'bus_id' => [
                'type' => 'INT',
                'constraint' => 5,
                'unsigned' => true,
            ],
            'created_at' => [
                'type' => 'TIMESTAMP',
                'null' => TRUE
            ],
            'updated_at' => [
                'type' => 'TIMESTAMP',
                'null' => TRUE
            ],
        ]);

        $this->forge->addPrimaryKey('route_id');
        $this->forge->addForeignKey('destination_id', 'destinations', 'destination_id', 'CASCADE', 'CASCADE');
        $this->forge->addForeignKey('bus_id', 'buses', 'bus_id');
        $this->forge->createTable('routes');
    }

    public function down()
    {
        $this->forge->dropTable('routes');
    }
}

<?php

namespace App\Database\Migrations;

use CodeIgniter\Database\Migration;

class CreateRoutesTicketsTable extends Migration
{
    public function up()
    {
        $this->forge->addField([
            'routestickets_id' => [
                'type' => 'INT',
                'constraint' => 5,
                'unsigned' => true,
                'auto_increment' => true,
            ],
            'route_id' => [
                'type' => 'INT',
                'constraint' => 5,
                'unsigned' => true,
            ],
            'ticket_id' => [
                'type' => 'INT',
                'constraint' => 5,
                'unsigned' => true,
            ],
            'created_at' => [
                'type' => 'TIMESTAMP',
                'null' => TRUE
            ],
            'updated_at' => [
                'type' => 'TIMESTAMP',
                'null' => TRUE
            ],
        ]);

        $this->forge->addPrimaryKey('routestickets_id');
        $this->forge->addForeignKey('route_id', 'routes', 'route_id', '', 'CASCADE');
        $this->forge->addForeignKey('ticket_id', 'tickets', 'ticket_id', '', 'CASCADE');
        $this->forge->createTable('routestickets');
    }

    public function down()
    {
        $this->forge->dropTable('routestickets');
    }
}

<?php

namespace App\Database\Migrations;

use CodeIgniter\Database\Migration;

class CreateSeatsTable extends Migration
{
    public function up()
    {
        $this->forge->addField([
            'seat_id' => [
                'type' => 'INT',
                'constraint' => 5,
                'unsigned' => true,
                'auto_increment' => true,
            ],
            'ticket_id' => [
                'type'           => 'INT',
                'constraint'     => 11,
                'unsigned'       => TRUE,
                'null'           => TRUE
            ],
            'reservation_id' => [
                'type'           => 'INT',
                'constraint'     => 11,
                'unsigned'       => TRUE,
                'null'           => TRUE
            ],
            'route_id' => [
                'type'           => 'INT',
                'constraint'     => 11,
                'unsigned'       => TRUE
            ],
            'seat_no' => [
                'type' => 'INT',
                'constraint' => 5,
                'unsigned' => true,
            ],
            'status' => [
                'type' => 'INT',
                'constraint' => 1,
                'default' => 0,
            ],
            'gender' => [
                'type' => 'TINYINT',
                'constraint' => 1,
                'default' => 0,
            ],
            'created_at' => [
                'type' => 'TIMESTAMP',
                'null' => TRUE
            ],
            'updated_at' => [
                'type' => 'TIMESTAMP',
                'null' => TRUE
            ],
        ]);

        $this->forge->addPrimaryKey('seat_id');
        $this->forge->createTable('seats');
        $this->forge->addForeignKey('ticket_id', 'tickets', 'ticket_id', "", "SET NULL");
        $this->forge->addForeignKey('reservation_id', 'reservations', 'reservation_id', "", "SET NULL");
        $this->forge->addForeignKey('route_id', 'routes', 'route_id', "", "CASCADE");
    }

    public function down()
    {
        $this->forge->dropTable('seats');
    }
}

<?php

namespace App\Database\Migrations;

use CodeIgniter\Database\Migration;

class CreateReservationsTable extends Migration
{
    public function up()
    {
        $this->forge->addField([
            'reservation_id' => [
                'type' => 'INT',
                'constraint' => 5,
                'unsigned' => true,
                'auto_increment' => true,
            ],
            'route_id' => [
                'type' => 'INT',
                'constraint' => 5,
                'unsigned' => true,
            ],
            'user_id' => [
                'type' => 'INT',
                'constraint' => 5,
                'unsigned' => true,
            ],
            'created_at' => [
                'type' => 'TIMESTAMP',
                'null' => TRUE
            ],
            'updated_at' => [
                'type' => 'TIMESTAMP',
                'null' => TRUE
            ]
        ]);

        $this->forge->addPrimaryKey('reservation_id');
        $this->forge->addForeignKey('route_id', 'routes', 'route_id', '', 'CASCADE');
        $this->forge->addForeignKey('user_id', 'users', 'user_id', '', 'CASCADE');
        $this->forge->createTable('reservations');
    }

    public function down()
    {
        $this->forge->dropTable('reservations');
    }
}

<?php

namespace App\Models;

use CodeIgniter\Model;


class Bus extends Model
{
    protected $table = 'buses';
    protected $primaryKey = 'bus_id';
    protected $allowedFields = ['plate', 'created_at', 'updated_at'];
    protected $useTimestamps = true;

    public function getRoutes($bus_id) : array
    {
        $routeModel = new Route();
        return $routeModel->where('bus_id', $bus_id)->findAll();
    }

}

<?php

namespace App\Models;

use CodeIgniter\Model;


class Destination extends Model
{
    protected $table = 'destinations';
    protected $primaryKey = 'destination_id';
    protected $allowedFields = ['starting_destination', 'ending_destination', 'created_at', 'updated_at'];
    protected $useTimestamps = true;

    public function getRoutes($destination_id) : array
    {
        $routeModel = new Route();
        return $routeModel->where('destination_id', $destination_id)->findAll();
    }

}

<?php

namespace App\Models;

use CodeIgniter\Model;
use Faker\Core\DateTime;

class Reservation extends Model
{
    protected $table = 'reservations';
    protected $primaryKey = 'reservation_id';
    protected $allowedFields = ['route_id', 'user_id', 'created_at', 'updated_at'];
    protected $useTimestamps = true;

    public function getRoute($reservation_id)
    {
        $reservation = $this->find($reservation_id);
        $routeModel = new Route();
        return $routeModel->find($reservation['route_id']);
    }
    public function getSeats($reservation_id) : array
    {
        $seatModel = new Seat();
        return $seatModel->where('reservation_id', $reservation_id)->findAll();
    }
    public function getUser($reservation_id)
    {
        $user_id = $this->find($reservation_id)['user_id'];
        $userModel = new User();
        return $userModel->find($reservation_id);
    }
}

<?php

namespace App\Models;

use CodeIgniter\Model;

class Route extends Model
{
    protected $table = 'routes';
    protected $primaryKey = 'route_id';
    protected $allowedFields = ['arrival_date', 'destination_id', 'bus_id', 'created_at', 'updated_at'];
    protected $useTimestamps = true;

    public function getBus($route_id)
    {
        $busId = $this->find($route_id)['bus_id'];
        $busModel = new Bus();
        return $busModel->find($busId);
    }
    public function getDestination($route_id)
    {
        $destinationId = $this->find($route_id)['destination_id'];
        $destinationModel = new Destination();
        return $destinationModel->find($destinationId);
    }
    public function getSeats($route_id): array
    {
        $seatModel = new Seat();
        return $seatModel->where('route_id', $route_id)->findAll();
    }
    public function searchTickets($starting_destination, $ending_destination, $going_date, $returning_date = null)
    {
        $going_query = $this->select('*')
            ->join('destinations', 'routes.destination_id = destinations.destination_id')
            ->where('destinations.starting_destination', $starting_destination)
            ->where('destinations.ending_destination', $ending_destination)
            ->where('DATE(routes.arrival_date)', $going_date)
            ->findAll();

        $returning_query = null;
        if ($returning_date) {
            $returning_query = $this->select('*')
                ->join('destinations', 'routes.destination_id = destinations.destination_id')
                ->where('destinations.starting_destination', $ending_destination)
                ->where('destinations.ending_destination', $starting_destination)
                ->where('DATE(routes.arrival_date)', $returning_date)
                ->findAll();
        }

        $results = array_merge($going_query, $returning_query ?? []);

        foreach ($results as &$result) {
            $result['arrival_date'] = date('d.m.Y', strtotime($result['arrival_date']));
        }

        return $results;
    }
}

<?php

namespace App\Models;

use CodeIgniter\Model;
use Faker\Core\DateTime;

class RouteTicket extends Model
{
    protected $table = 'routestickets';
    protected $primaryKey = 'routestickets_id';
    protected $allowedFields = ['route_id', 'ticket_id', 'created_at', 'updated_at'];
    protected $useTimestamps = true;
}

<?php

namespace App\Models;

use CodeIgniter\Model;

class Seat extends Model
{
    protected $table = 'seats';
    protected $primaryKey = 'seat_id';
    protected $allowedFields = ['ticket_id', 'reservation_id', 'route_id','seat_no', 'status', 'gender', 'created_at', 'updated_at'];
    protected $useTimestamps = true;

    public function getRoute($seat_id)
    {
        $seat = $this->find($seat_id);
        $routeModel = new Route();
        return $routeModel->find($seat['route_id']);
    }
    public function getReservation($seat_id)
    {
        $seat = $this->find($seat_id);
        $reservationModel = new Reservation();
        return $reservationModel->find($seat['reservation_id']);
    }
    public function getTicket($seat_id)
    {
        $seat = $this->find($seat_id);
        $ticketModel = new Ticket();
        return $ticketModel->find($seat['ticket_id']);
    }
}

<?php

namespace App\Models;

use CodeIgniter\Model;
use DateTime;


class Ticket extends Model
{
    protected $table = 'tickets';
    protected $primaryKey = 'ticket_id';
    protected $allowedFields = ['user_id', 'pnr_number', 'status', 'price', 'is_round_trip', 'created_at', 'updated_at'];
    protected $useTimestamps = true;

    public function getUser($ticket_id)
    {
        $user_id = $this->find($ticket_id)['user_id'];
        $userModel = new User();
        return $userModel->find($ticket_id);
    }
    public function getSeats($ticket_id): array
    {
        $seatModel = new Seat();
        return $seatModel->where('ticket_id', $ticket_id)->findAll();
    }
    public function generatePnr($ticket_id)
    {
        $plates = ['antalya' => '07', 'izmir' => '35', 'ankara' => '06', 'istanbul' => '34'];
        $ticketRoutes = new RouteTicket();
        $route_id = $ticketRoutes->where('ticket_id', $ticket_id)->first()['route_id'];
        $routeModel = new Route();
        $destination = $routeModel->getDestination($route_id);
        $bus = $routeModel->getBus($route_id);
        $dateTime = new DateTime();
        $ampm = $dateTime->format('a') == 'pm' ? 'ÖS' : 'ÖÖ';
        $formattedDateTime = $dateTime->format('dmYHis');
        $cityCode = $plates[$destination['starting_destination']];
        $plate = str_replace(' ', '', $bus['plate']);
        $pnrCode = $cityCode . $ampm . $formattedDateTime . 'D' . $plate;
        $ticketToUpdate = $this->find($ticket_id);
        $ticketToUpdate['pnr_number'] = $pnrCode;
        $this->save($ticketToUpdate);
        return $pnrCode;
    }
}

<?php

namespace App\Models;

use CodeIgniter\Model;
use Faker\Core\DateTime;

class User extends Model
{
    protected $table = 'users';
    protected $primaryKey = 'user_id';
    protected $allowedFields = ['name', 'email', 'password','identity_number','phone_number','gender','age','job', 'is_admin', 'passport_number', 'created_at','updated_at'];
    protected $useTimestamps = true;

    public function getWallet($user_id)
    {
        $walletModel = new Wallet();
        return $walletModel->where('user_id', $user_id)->first();
    }
    public function getTickets($user_id) : array
    {
        $ticketModel = new Ticket();
        return $ticketModel->where('user_id', $user_id)->findAll();
    }
    public function getReservations($user_id) : array
    {
        $reservationModel = new Reservation();
        return $reservationModel->where('user_id', $user_id)->findAll();
    }
    public function createWallet($user_id)
    {
        $walletModel = new Wallet();
        $wallet = $walletModel->where('user_id', $user_id)->first();
        if($wallet != null) return;
        $data = ['user_id' => $user_id];
        $walletModel->save($data);
    }
}


<?php

namespace App\Models;

use CodeIgniter\Model;
use Faker\Core\DateTime;

class Wallet extends Model
{
    protected $table = 'wallets';
    protected $primaryKey = 'wallet_id';
    protected $allowedFields = ['user_id', 'balance', 'created_at', 'updated_at'];
    protected $useTimestamps = true;

    public function getUser($wallet_id)
    {
        $user_id = $this->find($wallet_id)['user_id'];
        $userModel = new User();
        return $userModel->find($user_id);
    }
}

<?= $this->include('templates/header') ?>
<div class="container" style="min-height: 100vh;">
    <?= $this->renderSection('content') ?>
</div>
<?= $this->include('templates/footer') ?>


<?= $this->include('templates/header') ?>
<div class="container" style="min-height: 100vh;">
    <?= $this->renderSection('process') ?>
</div>
<?= $this->include('templates/footer') ?>

<div style="margin: auto; width: 40%;">
    <ul style="display: flex; gap: .5rem; flex-wrap: wrap; list-style: none; justify-content: center;">
        <form class="margin-auto" action="/process/select<?= esc($type) ?>Seats" method="post">
            <span>Input seats</span>
            <br>
            <?php foreach ($seats as $seatNumber => $status): ?>
            <?= "Seat $seatNumber: $status <br>"; ?>
            <?php endforeach; ?>
            1-2-3 şeklinde gir
            <input type="text" id="select<?= esc($type) ?>Seats" name="select<?= esc($type) ?>Seats"
                style="width: 5rem;" />
            <input type="submit" value="Select">
        </form>
    </ul>
</div>
<style>
h1 {
    color: #eee;
    font: 30px Arial, sans-serif;
    text-shadow: 0px 1px black;
    text-align: center;
}

input[type=checkbox] {
    visibility: hidden;
}

.containerbus {
    display: flex;
    justify-content: center;
}

.autobus {
    background: lightgray;
    display: flex;
    flex-direction: column;
    justify-content: space-between;
    width: 120px;
    height: 200px;
}

.seat {
    width: 21px;
    height: 21px;
    color: white;
    font-size: 10;
    text-align: center;
    background: #fcfff4;
    background: linear-gradient(top, #fcfff4 0%, #dfe5d7 40%, #b3bead 100%);
    margin: 5px auto;
    box-shadow: inset 0px 1px 1px white, 0px 1px 3px rgba(0, 0, 0, 0.5);
    position: relative;
}

.seat label {
    cursor: pointer;
    position: absolute;
    width: 15px;
    height: 15px;
    left: 3px;
    top: 3px;
    box-shadow: inset 0px 1px 1px rgba(0, 0, 0, 0.5), 0px 1px 0px rgba(255, 255, 255, 1);
    background: linear-gradient(top, #222 0%, #45484d 100%);
}

.seat label:after {
    filter: alpha(opacity=0);
    opacity: 0;
    content: '';
    position: absolute;
    width: 15px;
    height: 15px;
    background: green;
    background: linear-gradient(top, #0895d3 0%, #0966a8 100%);
    top: 0px;
    left: 0px;
    box-shadow: inset 0px 1px 1px white, 0px 1px 3px rgba(0, 0, 0, 0.5);
}

.seat label:hover::after {
    filter: alpha(opacity=30);
    opacity: 0.3;
}

.seat input[type=checkbox]:checked+label:after {
    filter: alpha(opacity=100);
    opacity: 1;
}
</style>

<!-- Button trigger modal -->
<!-- <button type="button" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#myModal">
    Delete
</button> -->
<div class="modal fade" id=<?= $modal_id ?> tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLabel"> <?= $title ?> </h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <?= $content ?>
            </div>
            <div class="modal-footer">
                <form action="<?= $endpoint ?>" method="<?= $method ?>">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal"><?= $close ?></button>
                    <input type="submit" class="btn btn-primary" value="<?= $confirm ?>" />
                </form>
            </div>
        </div>
    </div>
</div>

<div class="card mb-3">
    <div class="card-body">
        <div class="d-flex justify-content-between">
            <div class="d-flex flex-row align-items-center">
                <div>
                    <img src="https://mdbcdn.b-cdn.net/img/Photos/new-templates/bootstrap-shopping-carts/img1.webp"
                        class="img-fluid rounded-3" alt="Shopping item" style="width: 65px;">
                </div>
                <div class="ms-3">
                    <h5><?= $reservation['startingDestination'] ?> -
                        <?= $reservation['endingDestination'] ?></h5>
                    <p class="small mb-0"><?= $reservation['datetime'] ?></p>
                    <p class="small mb-0"><?= $reservation['busPlate'] ?></p>
                    <p class="small mb-0">
                        <?= $reservation['roundTrip'] ? 'Round Trip' : 'One Way' ?></p>
                </div>
            </div>
            <div class="d-flex flex-row align-items-center">
                <div style="width: 50px;">
                    <h5 class="fw-normal mb-0">
                        <?= getenv('currency') . $reservation['price'] ?></h5>
                </div>
                <!-- Button trigger modal -->
                <button type="button" class="btn btn-danger" data-bs-toggle="modal"
                    data-bs-target="#<?= 'deleteReservation'.$reservation['reservation_id'] ?>" >
                    Delete
                </button>
                <?= view('partials/modal', [
                    'modal_id' => 'deleteReservation'.$reservation['reservation_id'],
                    'title' => 'Delete Reservation',
                    'content' => 'Are you sure you want to cancel the reservation?',
                    'endpoint' => '/user/deleteReservation/'.$reservation['reservation_id'],
                    'method' => 'post',
                    'close' => 'Cancel',
                    'confirm' => 'Delete',
                ]); ?>
            </div>
        </div>
    </div>
</div>

<div class="card mb-3">
    <form method="post">
        <input type="hidden" name="ticket-id" value="<?= $ticket['ticket_id'] ?>">
        <div class="card-body">
            <div class="d-flex justify-content-between">
                <div class="d-flex flex-row align-items-center">
                    <div>
                        <img src="https://mdbcdn.b-cdn.net/img/Photos/new-templates/bootstrap-shopping-carts/img1.webp"
                            class="img-fluid rounded-3" alt="Shopping item" style="width: 65px;">
                    </div>
                    <div class="ms-3">
                        <h5><?= $ticket['startingDestination'] ?> -
                            <?= $ticket['endingDestination'] ?></h5>
                        <p class="small mb-0"><?= $ticket['datetime'] ?></p>
                        <p class="small mb-0"><?= $ticket['busPlate'] ?></p>
                        <p class="small mb-0">
                            <?= $ticket['roundTrip'] ? 'Round Trip' : 'One Way' ?></p>
                    </div>
                </div>
                <div class="d-flex flex-row align-items-center">
                    <div style="width: 50px;">
                        <h5 class="fw-normal mb-0">
                            <?= getenv('currency') . $ticket['price'] ?></h5>
                    </div>
                    <!-- Button trigger modal -->
                    <button type="button" class="btn btn-danger" data-bs-toggle="modal"
                        data-bs-target="#<?= 'releaseTheTicket'.$ticket['ticket_id'] ?>">
                        Release the Ticket
                    </button>
                    <?= view('partials/modal', [
                    'modal_id' => 'releaseTheTicket'.$ticket['ticket_id'],
                    'title' => 'Release the Ticket',
                    'content' => 'Are you sure you want to release the ticket?',
                    'endpoint' => '/user/releaseTheTicket/'.$ticket['ticket_id'],
                    'method' => 'post',
                    'close' => 'Cancel',
                    'confirm' => 'Release',
                ]); ?>
                </div>
            </div>
        </div>
    </form>

</div>

<div class="container">
    <footer class="d-flex flex-wrap justify-content-between align-items-center py-3 my-4 border-top">
        <p class="col-md-4 mb-0 text-muted">© <?= getenv('BRAND_NAME') ?></p>

        <a href="/"
            class="col-md-4 d-flex align-items-center justify-content-center mb-3 mb-md-0 me-md-auto link-dark text-decoration-none">
            <svg class="bi me-2" width="40" height="32">
                <use xlink:href="#bootstrap"></use>
            </svg>
        </a>

        <ul class="nav col-md-4 justify-content-end">
            <li class="nav-item"><a href="#" class="nav-link px-2 text-muted">Home</a></li>
            <li class="nav-item"><a href="#" class="nav-link px-2 text-muted">Features</a></li>
            <li class="nav-item"><a href="#" class="nav-link px-2 text-muted">Pricing</a></li>
            <li class="nav-item"><a href="#" class="nav-link px-2 text-muted">FAQs</a></li>
            <li class="nav-item"><a href="#" class="nav-link px-2 text-muted">About</a></li>
        </ul>
    </footer>
</div>
<!-- AnimateCSS CDN -->
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/animate.css/4.1.1/animate.min.css" />
<!-- Bootstrap Js CDN -->
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"
    integrity="sha384-YvpcrYf0tY3lHB60NNkmXc5s9fDVZLESaAA55NDzOxhy9GkcIdslK1eN7N6jIeHz" crossorigin="anonymous">
</script>
</body>
</html>

<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
    <!-- Bootstrap CDN -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet"
        integrity="sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH" crossorigin="anonymous">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.3/font/bootstrap-icons.min.css">
</head>

<body>
    <div class="bg-body-tertiary">
        <nav class="navbar navbar-expand-lg container">
            <a class="navbar-brand" href="/"><?= getenv('BRAND_NAME') ?> </a>
            <button class="navbar-toggler" type="button" data-bs-toggle="collapse"
                data-bs-target="#navbarSupportedContent" aria-controls="navbarSupportedContent" aria-expanded="false"
                aria-label="Toggle navigation">
                <span class="navbar-toggler-icon"></span>
            </button>
            <div class="collapse navbar-collapse" id="navbarSupportedContent">
                <ul class="navbar-nav me-auto mb-2 mb-lg-0">
                    <li class="nav-item">
                        <a class="nav-link active" aria-current="page" href="/routes">Routes</a>
                    </li>
                </ul>
            </div>
            <div>
                <ul class="navbar-nav me-auto mb-2 mb-lg-0">
                    <?php if(session()->has('logged_in')): ?>
                        <li class="nav-item">
                            <a class="nav-link active" href="#"><i class="bi bi-wallet2"></i> <?php echo session()->get('balance') ?> ₺</a>

                        </li>
                        <li class="nav-item dropdown">
                            <a class="nav-link dropdown-toggle" href="#" role="button" data-bs-toggle="dropdown"
                               aria-expanded="false">
                                Profile
                            </a>
                            <ul class="dropdown-menu">
                                <li><a class="dropdown-item" href="/user/tickets">Tickets</a></li>
                                <li><a class="dropdown-item" href="/user/reservations">Reservations</a></li>
                                <li><a class="dropdown-item" href="/user/settings">Settings</a></li>
                                <li>
                                    <hr class="dropdown-divider">
                                </li>
                                <li><form method="post" action="/logout"><button class="dropdown-item" type="submit">Log out</button></form></li>
                            </ul>
                        </li>
                    <?php else: ?>
                        <li class="nav-item">
                            <a class="nav-link active" href="/login">Log in</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link active" href="/register">Sign Up</a>
                        </li>
                    <?php endif; ?>
                </ul>
            </div>
        </nav>
    </div>


<?= $this->extend('layouts/main') ?>
<?= $this->section('content') ?>
<ul class="mt-3 nav nav-tabs" id="myTab" role="tablist">
    <li class="nav-item" role="presentation">
        <button class="nav-link active" id="current-tab" data-bs-toggle="tab" data-bs-target="#current" type="button"
            role="tab" aria-controls="current" aria-selected="true">Current Tickets</button>
    </li>
    <li class="nav-item" role="presentation">
        <button class="nav-link" id="old-tab" data-bs-toggle="tab" data-bs-target="#old" type="button" role="tab"
            aria-controls="old" aria-selected="false">Old Tickets</button>
    </li>
</ul>
<div class="mt-2 tab-content" id="myTabContent">
    <div class="tab-pane fade show active" id="current" role="tabpanel" aria-labelledby="current-tab">
        <h3>Current Tickets</h3>
        <?php foreach (esc($currentTickets) as $ticket): ?>
        <?php include(APPPATH . 'Views/partials/ticket.php'); ?>
        <?php endforeach; ?>
    </div>
    <div class="tab-pane fade" id="old" role="tabpanel" aria-labelledby="old-tab">
        <h3>Old Tickets</h3>
        <?php foreach (esc($oldTickets) as $ticket): ?>
        <?php include(APPPATH . 'Views/partials/ticket.php'); ?>
        <?php endforeach; ?>
    </div>
</div>
<?= $this->endSection() ?>


<?= $this->extend('layouts/main') ?>
<?= $this->section('content') ?>
<div class="mt-3">
    <h3>Reservations</h3>
    <?php foreach (esc($reservations) as $reservation): ?>
    <?php include(APPPATH . 'Views/partials/reservation.php'); ?>
    <?php endforeach; ?>
</div>
<?= $this->endSection() ?>

<?= $this->extend('layouts/main') ?>
<?= $this->section('content') ?>
<ul class="mt-3 nav nav-tabs" id="myTab" role="tablist">
    <li class="nav-item" role="presentation">
        <button class="nav-link active" id="current-tab" data-bs-toggle="tab" data-bs-target="#current" type="button"
            role="tab" aria-controls="current" aria-selected="true">Current Tickets</button>
    </li>
    <li class="nav-item" role="presentation">
        <button class="nav-link" id="old-tab" data-bs-toggle="tab" data-bs-target="#old" type="button" role="tab"
            aria-controls="old" aria-selected="false">Old Tickets</button>
    </li>
</ul>
<div class="mt-2 tab-content" id="myTabContent">
    <div class="tab-pane fade show active" id="current" role="tabpanel" aria-labelledby="current-tab">
        <h3>Current Tickets</h3>
        <?php foreach (esc($currentTickets) as $ticket): ?>
        <?php include(APPPATH . 'Views/partials/ticket.php'); ?>
        <?php endforeach; ?>
    </div>
    <div class="tab-pane fade" id="old" role="tabpanel" aria-labelledby="old-tab">
        <h3>Old Tickets</h3>
        <?php foreach (esc($oldTickets) as $ticket): ?>
        <?php include(APPPATH . 'Views/partials/ticket.php'); ?>
        <?php endforeach; ?>
    </div>
</div>
<?= $this->endSection() ?>

<?= $this->extend('layouts/main') ?>
<?= $this->section('content') ?>
<section class="position-relative h-100 pb-5 bg-light" style="min-height: 100vh;">
    <div class="container pt-5">
        <div class="row align-items-center">
            <div class="col-12  mx-auto mx-lg-0 mb-5">
                <h2 class="display-4 fw-bold mb-5">Find Your Bus Tickets Easily.</h2>
                <p class="lead text-muted mb-5">Discover and book bus tickets hassle-free. Build a reliable brand that
                    caters to everyone's needs. Continuously develop resources and integrate them with previous
                    projects.</p>
                <div class="d-flex justify-content-center">
                    <div class="btn-group" role="group" aria-label="Basic outlined example">
                        <button type="button" id="oneWay" class="btn btn-primary">Tek Yön</button>
                        <button type="button" id="roundTrip" class="btn btn-outline-primary">Gidiş Dönüş</button>
                    </div>
                </div>
                <form class="d-flex mt-3" action="searchTickets" method="get">
                    <div class="col-sm me-2">
                        <label for="starting_destination">Kalkış Yeri</label>
                        <select class="form-select" name="starting_destination" aria-label="Default select example">
                            <option value="antalya" selected>Antalya</option>
                            <option value="ankara">Ankara</option>
                            <option value="istanbul">İstanbul</option>
                            <option value="izmir">İzmir</option>
                        </select>
                    </div>
                    <div class="col-sm me-2">
                        <label for="ending_destination">Varış Yeri</label>
                        <select class="form-select" name="ending_destination" aria-label="Default select example">
                            <option value="antalya">Antalya</option>
                            <option selected value="ankara">Ankara</option>
                            <option value="istanbul">İstanbul</option>
                            <option value="izmir">İzmir</option>
                        </select>
                    </div>
                    <div class="col-sm me-2 d-flex flex-column">
                        <label for="going_date">Gidiş Tarihi</label>
                        <input class="h-100" type="date" name="going_date" id="">
                    </div>
                    <div class="col-sm me-2 d-flex flex-column">
                        <label for="returning_date">Dönüş Tarihi</label>
                        <input disabled class="h-100" type="date"  value="" name="returning_date" id="returning_date">
                    </div>

                    <button class="btn btn-primary h-100 mt-4">Search</button>
                </form>
            </div>
            <div class="col-12 col-lg-6 offset-lg-1 pb-5">
                <img class="mx-auto img-fluid rounded" src="https://picsum.photos/600/400" alt="">
            </div>
        </div>
    </div>
</section>
    <script>
        document.getElementById('oneWay').addEventListener('click', function() {

            var returningDate = document.getElementById('returning_date');
            var oneWayBtn = document.getElementById('oneWay');
            var roundTripBtn = document.getElementById('roundTrip');

            returningDate.disabled = true;

            // Butonun sınıfını güncelle (btn-outline-primary --> btn-primary)
            oneWayBtn.classList.remove('btn-outline-primary');
            oneWayBtn.classList.add('btn-primary');
            roundTripBtn.classList.remove('btn-primary');
            roundTripBtn.classList.add('btn-outline-primary');
        });
        document.getElementById('roundTrip').addEventListener('click', function() {
            var returningDate = document.getElementById('returning_date');
            var oneWayBtn = document.getElementById('oneWay');
            var roundTripBtn = document.getElementById('roundTrip');

            returningDate.disabled = false;

            oneWayBtn.classList.remove('btn-primary');
            oneWayBtn.classList.add('btn-outline-primary');
            roundTripBtn.classList.remove('btn-outline-primary');
            roundTripBtn.classList.add('btn-primary');
        });
    </script>
<?= $this->endSection()?>


<?= $this->extend('layouts/main') ?>
<?= $this->section('content') ?>
<section>
    <div class="container-fluid">
        <div class="row d-flex justify-content-center align-items-center h-100">
            <h3 class="text-center" style="margin-top: 5rem; margin-bottom: 5rem;">Login </h3>
            <div class="animate__animated animate__backInLeft col-md-9 col-lg-6 col-xl-5">
                <img src="/images/trip.jpg" class="img-fluid rounded" alt="Sample image">
            </div>
            <div class="animate__animated animate__backInRight col-md-8 col-lg-6 col-xl-4 offset-xl-1">
                <form action="login" method="post">
                    <div class="form-outline mb-4">
                        <input type="email" id="email" name="email" class="form-control form-control-lg"
                            placeholder="Enter a valid email address" />
                        <label class="form-label" for="login-email">Email address</label>
                    </div>
                    <div class="form-outline mb-3">
                        <input type="password" id="password" name="password"
                            class="form-control form-control-lg" placeholder="Enter password" />
                        <label class="form-label" for="login-password">Password</label>
                    </div>
                    <div class="d-flex justify-content-between align-items-center">
                        <div class="form-check mb-0">
                            <input class="form-check-input me-2" type="checkbox" value="" id="remember-me"
                                name="remember-me" />
                            <label class="form-check-label" for="remember-me">
                                Remember me
                            </label>
                        </div>
                        <a href="#!" class="text-body">Forgot password?</a>
                    </div>
                    <?php if (session()->getFlashdata('errors')) : ?>
                        <div class="alert alert-danger mt-4" role="alert">
                            <ul>
                                <?php foreach (session()->getFlashdata('errors') as $error) : ?>
                                    <li><?= esc($error) ?></li>
                                <?php endforeach ?>
                            </ul>
                        </div>
                    <?php endif ?>
                    <div class="text-center text-lg-start mt-4 pt-2">
                        <input type="submit" class="btn btn-primary btn-lg"
                            style="padding-left: 2.5rem; padding-right: 2.5rem;" value="Log in">
                        <p class="small fw-bold mt-2 pt-1 mb-0">Don't have an account?
                            <a href="register" class="link-info">Register</a>
                        </p>
                    </div>
                </form>

            </div>
        </div>
    </div>
</section>
<?= $this->endSection()?>

<?= $this->extend('layouts/main') ?>
<?= $this->section('content') ?>
<section class="h-100 h-custom">
    <div class="container py-5 h-100">
        <div class="row d-flex justify-content-center align-items-center h-100">
            <div class="col">
                <div class="card">
                    <div class="card-body p-4">
                        <div class="row">
                            <div class="col-lg-7">
                                <h5 class="mb-3"><a href="#!" class="text-body"><i class="fas fa-long-arrow-alt-left me-2"></i>Continue shopping</a></h5>
                                <hr>
                                <div class="d-flex justify-content-between align-items-center mb-4">
                                    <div>
                                        <p class="mb-1">Shopping cart</p>
                                        <p class="mb-0">You have <?= count(esc($tickets)) ?> items in your cart</p>
                                    </div>
                                    <div>
                                        <p class="mb-0"><span class="text-muted">Sort by:</span> <a href="#!" class="text-body">price <i class="fas fa-angle-down mt-1"></i></a></p>
                                    </div>
                                </div>

                                <?php foreach (esc($tickets) as $ticket) : ?>
                                    <div class="card mb-3">
                                        <div class="card-body">
                                            <div class="d-flex justify-content-between">
                                                <div class="d-flex flex-row align-items-center">
                                                    <div>
                                                        <img src="https://mdbcdn.b-cdn.net/img/Photos/new-templates/bootstrap-shopping-carts/img1.webp" class="img-fluid rounded-3" alt="Shopping item" style="width: 65px;">
                                                    </div>
                                                    <div class="ms-3">
                                                        <h5><?= $ticket['startingDestination'] ?> -
                                                            <?= $ticket['endingDestination'] ?></h5>
                                                        <p class="small mb-0"><?= $ticket['datetime'] ?></p>
                                                        <p class="small mb-0"><?= $ticket['busPlate'] ?></p>
                                                        <p class="small mb-0">
                                                            <?= $ticket['roundTrip'] ? 'Round Trip' : 'One Way' ?></p>
                                                    </div>
                                                </div>
                                                <div class="d-flex flex-row align-items-center">
                                                    <div style="width: 50px;">
                                                        <h5 class="fw-normal mb-0">
                                                            <?= getenv('currency') . $ticket['price'] ?></h5>
                                                    </div>
                                                    <a href="#!" style="color: #cecece;"><i class="fas fa-trash-alt"></i></a>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                <?php endforeach; ?>

                            </div>
                            <div class="col-lg-5">
                                <div class="card bg-primary text-white rounded-3">
                                    <div class="card-body">
                                        <div class="d-flex justify-content-between align-items-center mb-4">
                                            <h5 class="mb-0">Card details</h5>
                                        </div>
                                        <form class="mt-4" action="/process/payment" method="post">
                                            <div class="form-outline form-white mb-4">
                                                <input type="text" id="name" name="name" class="form-control form-control-lg" siez="17" placeholder="Cardholder's Name" />
                                                <label class="form-label" for="typeName">Cardholder's Name</label>
                                            </div>
                                            <div class="form-outline form-white mb-4">
                                                <input type="text" id="number" name="number" class="form-control form-control-lg" size="17" placeholder="1234 5678 9012 3457" minlength="19" maxlength="19" />

                                                <label class="form-label" for="typeText">Card Number</label>
                                            </div>
                                            <div class="row mb-4">
                                                <div class="col-md-6">
                                                    <div class="form-outline form-white">
                                                        <input type="text" id="expiration" name="expiration" class="form-control form-control-lg" placeholder="MM/YY" size="7" id="exp" minlength="5" maxlength="5" />
                                                        <label class="form-label" for="typeExp">Expiration</label>
                                                    </div>
                                                </div>
                                                <div class="col-md-6">
                                                    <div class="form-outline form-white">
                                                        <input type="password" id="cvv" class="form-control form-control-lg" name="cvv" placeholder="&#9679;&#9679;&#9679;" size="1" minlength="3" maxlength="3" />
                                                        <label class="form-label" for="typeText">Cvv</label>
                                                    </div>
                                                </div>
                                            </div>
                                            <hr class="my-4">
                                            <div class="d-flex justify-content-between">
                                                <p class="mb-2">Subtotal</p>
                                                <p class="fw-normal mb-0"><?= getenv('currency') . esc($subTotal) ?></p>
                                            </div>
                                            <div class="d-flex justify-content-between">
                                                <p class="mb-2">Discount (%<?= esc($discountPercentage) ?>)</p>
                                                <p class="fw-normal mb-0">
                                                    <?= getenv('currency') . esc($discountAmount) ?>
                                                </p>
                                            </div>
                                            <div class="d-flex justify-content-between mb-4">
                                                <p class="mb-2">Total Price</p>
                                                <p class="fw-normal mb-0"><?= getenv('currency') . esc($totalPrice) ?>
                                                </p>
                                            </div>
                                            <input type="submit" class="btn btn-info btn-block btn-lg" value="<?= getenv('currency') . esc($totalPrice) ?> Checkout">
                                            </input>
                                        </form>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>
<?= $this->endSection() ?>

<?= $this->extend('layouts/process') ?>
<?= $this->section('process') ?>
<section class="mt-3 container">
    <div class="d-flex flex-column flex-md-row align-items-center justify-content-center">
        <div
            class="d-flex align-items-center <?= in_array(esc($event), ['select_going_seats', 'select_returning_seats', 'payment']) ? 'fw-bold': '' ?>">
            <div class="d-inline-flex me-4 justify-content-center align-items-center rounded-pill fs-9"
                style="width: 30px; height: 30px;">1</div>
            <span class="">Select Going Seats</span>
        </div>
        <span class="my-4 my-md-0 mx-md-8 mx-lg-16">
            <svg width="18" height="14" viewbox="0 0 18 14" fill="none" xmlns="http://www.w3.org/2000/svg">
                <path opacity="0.5"
                    d="M10.6667 1.16669L16.5 7.00002M16.5 7.00002L10.6667 12.8334M16.5 7.00002L1.5 7.00002"
                    stroke="#84878A" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"></path>
            </svg>
        </span>
        <div
            class="d-flex align-items-center <?= in_array(esc($event), ['select_returning_seats', 'payment']) ? 'fw-bold': '' ?>">
            <div class="d-inline-flex me-4 justify-content-center align-items-center rounded-pill fs-9"
                style="width: 30px; height: 30px;">2</div>
            <span class="">Select Returning Seats</span>
        </div>
        <span class="my-4 my-md-0 mx-md-8 mx-lg-16">
            <svg width="18" height="14" viewbox="0 0 18 14" fill="none" xmlns="http://www.w3.org/2000/svg">
                <path opacity="0.5"
                    d="M10.6667 1.16669L16.5 7.00002M16.5 7.00002L10.6667 12.8334M16.5 7.00002L1.5 7.00002"
                    stroke="#84878A" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"></path>
            </svg>
        </span>
        <div class="d-flex align-items-center <?= esc($event)==='payment' ? 'fw-bold': '' ?>">
            <div class="d-inline-flex me-4 justify-content-center align-items-center rounded-pill fs-9"
                style="width: 30px; height: 30px;">3</div>
            <span class="">Payment</span>
        </div>
    </div>
    <?php
        $data = [
            'seats' => [
                '1' => 'reserved',
                '2' => 'bought',
                '3' => 'free',
                '4' => 'reserved',
                '5' => 'bought',
                '6' => 'free',
            ],
            'type' => 'Going'
        ];

        $view_content = "";

        if ($event === 'select_going_seats') {
            $view_content = view('partials/bus_seats.php', $data);
        } elseif ($event === 'select_returning_seats') {
            $data['type']='Returning';
            $view_content=view('partials/bus_seats.php',$data);
        }
        elseif ($event === 'payment') {
            $view_content = view('payment');
        }
        ?>
    <?= $view_content ?>

</section>
<?= $this->endSection()?>

<?= $this->extend('layouts/main') ?>
<?= $this->section('content') ?>
<section class="mt-3">
    <div class="container h-100">
        <div class="row d-flex justify-content-center align-items-center h-100">
            <div class="col-lg-12 col-xl-11">
                <div class="card text-black" style="border-radius: 25px;">
                    <div class="card-body p-md-5">
                        <div class="row justify-content-center">
                            <div class="col-md-10 col-lg-6 col-xl-5 order-2 order-lg-1">
                                <p class="text-center h1 fw-bold mb-5 mx-1 mx-md-4 mt-4">Sign up</p>
                                <form class="mx-1 mx-md-4" action="/register" method="post">
                                    <div class="d-flex flex-row align-items-center mb-4">
                                        <div class="form-outline flex-fill mb-0">
                                            <input type="text" id="name" name="name" class="form-control" />
                                            <label class="form-label" for="name">Your Name</label>
                                        </div>
                                    </div>
                                    <div class="d-flex flex-row align-items-center mb-4">
                                        <div class="form-outline flex-fill mb-0">
                                            <input type="text" id="tel_no" name="phone_number" class="form-control" />
                                            <label class="form-label" for="tel_no">Telephone</label>
                                        </div>
                                    </div>
                                    <div class="d-flex flex-row align-items-center mb-4">
                                        <div class="form-outline flex-fill mb-0">
                                            <input type="text" id="tc_no" name="identity_number" class="form-control" />
                                            <label class="form-label" for="tc_no">Identity No</label>
                                        </div>
                                    </div>
                                    <div class="col-md-12 mb-4">
                                        <h6 class="mb-2 pb-1">Gender: </h6>
                                        <div class="form-check form-check-inline">
                                            <input class="form-check-input" type="radio" name="gender"
                                                id="gender-female" value="female" checked />
                                            <label class="form-check-label" for="gender-female">Female</label>
                                        </div>
                                        <div class="form-check form-check-inline">
                                            <input class="form-check-input" type="radio" name="gender" id="gender-male"
                                                value="male" />
                                            <label class="form-check-label" for="gender-male">Male</label>
                                        </div>
                                    </div>
                                    <div class="d-flex flex-row align-items-center mb-4">
                                        <div class="form-outline flex-fill mb-0">
                                            <input type="number" id="age" name="age" class="form-control" />
                                            <label class="form-label" for="age">Age</label>
                                        </div>
                                    </div>
                                    <div class="d-flex flex-row align-items-center mb-4">
                                        <div class="form-outline flex-fill mb-0">
                                            <input type="text" id="job" name="job" class="form-control" />
                                            <label class="form-label" for="job">Job</label>
                                        </div>
                                    </div>
                                    <div class="d-flex flex-row align-items-center mb-4">
                                        <div class="form-outline flex-fill mb-0">
                                            <input type="text" id="passport_number" name="passport_number"
                                                class="form-control" />
                                            <label class="form-label" for="passport_number">Passport No</label>
                                        </div>
                                    </div>
                                    <div class="d-flex flex-row align-items-center mb-4">
                                        <div class="form-outline flex-fill mb-0">
                                            <input type="email" id="email" name="email" class="form-control" />
                                            <label class="form-label" for="email">Your Email</label>
                                        </div>
                                    </div>
                                    <div class="d-flex flex-column align-items-center mb-4">
                                        <div class="form-outline flex-fill mb-0 w-100">
                                            <input type="password" id="password" name="password" class="form-control" />
                                            <label class="form-label" for="password">Password</label>
                                        </div>
                                        <?php if(session()->getFlashdata('error')): ?>
                                            <div class="text-danger"><?= session()->getFlashdata('error') ?></div>
                                        <?php endif; ?>
                                    </div>
                                    <div class="d-flex flex-row align-items-center mb-4">
                                        <div class="form-outline flex-fill mb-0">
                                            <input type="password" id="password_confirmation" name="password_confirmation" class="form-control" />
                                            <label class="form-label" for="password_confirmation">Password Confirmation</label>
                                        </div>
                                    </div>
                                    <div class="form-check d-flex justify-content-center mb-5">
                                        <input class="form-check-input me-2" type="checkbox" value=""
                                            id="form2Example3c" />
                                        <label class="form-check-label" for="form2Example3">
                                            I agree all statements in <a href="#!">Terms of service</a>
                                        </label>
                                    </div>
                                    <div class="d-flex justify-content-center mx-4 mb-3 mb-lg-4">
                                        <input type="submit" class="btn btn-primary btn-lg" value="Submit" />
                                    </div>
                                </form>
                                <?php if (session()->getFlashdata('errors')) : ?>
                                    <div class="alert alert-danger" role="alert">
                                        <ul>
                                            <?php foreach (session()->getFlashdata('errors') as $error) : ?>
                                                <li><?= esc($error) ?></li>
                                            <?php endforeach ?>
                                        </ul>
                                    </div>
                                <?php endif ?>
                                <?php if(session()->getFlashdata('createError')): ?>
                                    <div class="text-danger"><?= session()->getFlashdata('createError') ?></div>
                                <?php endif; ?>

                            </div>
                            <div class="col-md-10 col-lg-6 col-xl-7 d-flex align-items-center order-1 order-lg-2">

                                <img src="https://picsum.photos/600/1000" class="img-fluid" alt="Sample image">

                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>
<?= $this->endSection()?>

<?= $this->extend('layouts/main') ?>
<?= $this->section('content') ?>
<section class="py-5" style="background-image: url('metis-assets/backgrounds/intersect.svg'); background-size: contain; background-repeat: no-repeat; background-position: top;">
    <div class="container">
        <div class="row mb-5">
            <div class="col-12 col-md-8 col-lg-7 mx-auto text-center">
                <h2 class="mb-3 fs-1 fw-bold">
                    <span>Start selecting your bus ticket and</span>
                    <span class="text-primary">choose</span>
                    <span>your preferred plan</span>
                </h2>
                <p class="mb-0 text-muted">Best for travelers who want to save time.</p>
            </div>
        </div>
        <div class="row">
            <?php foreach (esc($routes) as $route) : ?>
                <div class="col-12 col-md-6 col-lg-4 mb-4">
                    <div class="px-3 py-5 text-center bg-white rounded shadow-sm">
                        <h3 class="mb-2 fs-1 fw-bold"><?= $route['startingDestination'] ?>-<?= $route['endingDestination'] ?></h3>
                        <div class="my-4 py-2">
                            <div class="mt-2">
                                <div class="fade show active" id="one">
                                    <form method="post">
                                        <input type="hidden" name="route-id" value="<?= $route['route-id'] ?>">
                                        <ul class="list-unstyled text-center text-muted mb-4">
                                            <span class="fs-1 fw-bold text-primary">$32.99</span>
                                            <p class="mt-1 text-muted"><?= $route['datetime'] ?></p>
                                            <li class="mb-" style="text-align: center;">
                                                <svg class="me-2 text-success" width="24" height="24" xmlns="http://www.w3.org/2000/svg" fill="none" viewbox="0 0 24 24" stroke="currentColor">
                                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z"></path>
                                                </svg>
                                                <span><?= $route['freeSeats'] ?>/35 Seats Free</span>
                                            </li>
                                        </ul>
                                        <div>
                                            <input type="submit" formaction="selectRoute" class="btn btn-primary me-2" value="Select Seat" />
                                        </div>
                                    </form>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            <?php endforeach; ?>
        </div>
    </div>
</section>
<?= $this->endSection() ?>


<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Bus Ticket Reservation</title>
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css">
    <style>
        .seat {
            width: 40px;
            height: 40px;
            background-color: #ccc;
            margin: 5px;
            border-radius: 5px;
            text-align: center;
            line-height: 40px;
            cursor: pointer;
        }
        .seat.selected {
            background-color: #007bff;
            color: #fff;
        }
        .seat.selected-after {
            background-color: #007bff;
            color: #fff;
        }
    </style>
</head>
<body>
<div class="container mt-5">
    <h2 class="mb-4">Otobüs Koltuk Seçimi</h2>
    <form action="seats" method="post">
        <?php
            if (session()->has('return'))
            {
                echo "<h5 class='mt-2'>Dönüş İçin Koltuk Seçiniz.</h5>";
            }
        ?>
    <div class="row">
        <?php

        $seatCount = 40;
        $user = ['gender' => 0];

        $selectedSeats = [3, 7, 10, 25];

        for ($i = 1; $i <= $seatCount; $i++) {

            $selectedClass = in_array($i, $selectedSeats) ? 'selected' : '';
            if ($i % 4 == 0) {

                $selected = $user['gender'] == 0 ? 'selected' : '';
                echo "<div><div class='seat $selectedClass' data-seat='$i'>$i</div></div>";

                echo "<div class='w-100'></div>";
            }
            else if($i % 2 == 0)
            {
                echo "<div class='mr-5'><div class='seat $selectedClass' data-seat='$i'>$i</div></div>";
            }
            else{
                echo "<div><div class='seat $selectedClass' data-seat='$i'>$i</div></div>";
            }
        }
        $return_id = 1;
        ?>
    </div>
    <div class="mt-4">
        <input type="hidden" name="seatNumbers" id="hiddenInput" value="">
        <input type="hidden" name="roundTripId" id="roundTrip" value="<?php echo $return_id?>">
        <button id="btnBuy" type="submit" class="btn btn-primary">Satın Al</button>
        <button id="btnReserve" type="submit" class="btn btn-primary">Reverzasyon Yap</button>
    </div>
    </form>
</div>
<div class="container mt-5">

</div>

<script src="https://code.jquery.com/jquery-3.5.1.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.5.4/dist/umd/popper.min.js"></script>
<script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>
<script>
    $(document).ready(function () {

        $('.seat').click(function () {
            $(this).toggleClass('selected-after');
        });
        $('.seat.selected').click(function () {
            //$(this).toggleClass('selected-after');
        });


        $('#btnReserve').click(function () {
            var selectedSeats = [];

            $('.seat.selected-after').each(function () {
                selectedSeats.push($(this).data('seat'));
            });

            console.log('Seçili Koltuklar:', selectedSeats);


            var seatString = selectedSeats.join("|");
            $('#hiddenInput').val(seatString);

        });
        $('#btnBuy').click(function () {
            var selectedSeats = [];

            $('.seat.selected-after').each(function () {
                selectedSeats.push($(this).data('seat'));
            });

            console.log('Seçili Koltuklar:', selectedSeats);


            var seatString = selectedSeats.join("|");
            $('#hiddenInput').val(seatString);

        });
    });
</script>
</body>
</html>

<!DOCTYPE html>
<html lang="tr">

<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Ödeme Başarılı</title>
    <script src="https://cdn.jsdelivr.net/npm/qrious@4.0.2/dist/qrious.min.js"></script>
</head>

<body>
    <h1>Ödeme Başarılı</h1>
    <p>Ödemeniz başarıyla gerçekleştirildi.</p>
    <p>PNR Numaranız: <?php echo $pnrCode; ?></p>
    <canvas id="qrcodeCanvas"></canvas>

    <script>
        var pnrCode = '<?php echo $pnrCode; ?>';
        var qr = new QRious({
            element: document.getElementById('qrcodeCanvas'),
            value: pnrCode,
            size: 200
        });
    </script>
</body>

</html>

<?= $this->extend('layouts/main') ?>

<?= $this->section('content') ?>

<div class="container mt-5">
    <h2>Search Results</h2>

    <p><strong>Starting Destination:</strong> <?= $starting_destination ?></p>
    <p><strong>Ending Destination:</strong> <?= $ending_destination ?></p>
    <p><strong>Going Date:</strong> <?= $going_date ?></p>
    <?php if ($returning_date) : ?>
        <p><strong>Returning Date:</strong> <?= $returning_date ?></p>
    <?php endif; ?>

    <hr>

    <?php if (!empty($tickets)) : ?>
        <h3>Available Tickets</h3>
        <table class="table">
            <thead>
                <tr>
                    <th>Route ID</th>
                    <th>Arrival Date</th>
                    <th>Bus ID</th>
                </tr>
            </thead>
            <tbody>
                <?php foreach ($tickets as $ticket) : ?>
                    <tr>
                        <td><?= $ticket['route_id'] ?></td>
                        <td><?= $ticket['arrival_date'] ?></td>
                        <td><?= $ticket['bus_id'] ?></td>
                    </tr>
                <?php endforeach; ?>
            </tbody>
        </table>
    <?php else : ?>
        <p>No tickets found.</p>
    <?php endif; ?>
</div>

<?= $this->endSection() ?>


<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Welcome to CodeIgniter 4!</title>
    <meta name="description" content="The small framework with powerful features">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="shortcut icon" type="image/png" href="/favicon.ico">

    <!-- STYLES -->

    <style {csp-style-nonce}>
        * {
            transition: background-color 300ms ease, color 300ms ease;
        }
        *:focus {
            background-color: rgba(221, 72, 20, .2);
            outline: none;
        }
        html, body {
            color: rgba(33, 37, 41, 1);
            font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Helvetica, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji";
            font-size: 16px;
            margin: 0;
            padding: 0;
            -webkit-font-smoothing: antialiased;
            -moz-osx-font-smoothing: grayscale;
            text-rendering: optimizeLegibility;
        }
        header {
            background-color: rgba(247, 248, 249, 1);
            padding: .4rem 0 0;
        }
        .menu {
            padding: .4rem 2rem;
        }
        header ul {
            border-bottom: 1px solid rgba(242, 242, 242, 1);
            list-style-type: none;
            margin: 0;
            overflow: hidden;
            padding: 0;
            text-align: right;
        }
        header li {
            display: inline-block;
        }
        header li a {
            border-radius: 5px;
            color: rgba(0, 0, 0, .5);
            display: block;
            height: 44px;
            text-decoration: none;
        }
        header li.menu-item a {
            border-radius: 5px;
            margin: 5px 0;
            height: 38px;
            line-height: 36px;
            padding: .4rem .65rem;
            text-align: center;
        }
        header li.menu-item a:hover,
        header li.menu-item a:focus {
            background-color: rgba(221, 72, 20, .2);
            color: rgba(221, 72, 20, 1);
        }
        header .logo {
            float: left;
            height: 44px;
            padding: .4rem .5rem;
        }
        header .menu-toggle {
            display: none;
            float: right;
            font-size: 2rem;
            font-weight: bold;
        }
        header .menu-toggle button {
            background-color: rgba(221, 72, 20, .6);
            border: none;
            border-radius: 3px;
            color: rgba(255, 255, 255, 1);
            cursor: pointer;
            font: inherit;
            font-size: 1.3rem;
            height: 36px;
            padding: 0;
            margin: 11px 0;
            overflow: visible;
            width: 40px;
        }
        header .menu-toggle button:hover,
        header .menu-toggle button:focus {
            background-color: rgba(221, 72, 20, .8);
            color: rgba(255, 255, 255, .8);
        }
        header .heroe {
            margin: 0 auto;
            max-width: 1100px;
            padding: 1rem 1.75rem 1.75rem 1.75rem;
        }
        header .heroe h1 {
            font-size: 2.5rem;
            font-weight: 500;
        }
        header .heroe h2 {
            font-size: 1.5rem;
            font-weight: 300;
        }
        section {
            margin: 0 auto;
            max-width: 1100px;
            padding: 2.5rem 1.75rem 3.5rem 1.75rem;
        }
        section h1 {
            margin-bottom: 2.5rem;
        }
        section h2 {
            font-size: 120%;
            line-height: 2.5rem;
            padding-top: 1.5rem;
        }
        section pre {
            background-color: rgba(247, 248, 249, 1);
            border: 1px solid rgba(242, 242, 242, 1);
            display: block;
            font-size: .9rem;
            margin: 2rem 0;
            padding: 1rem 1.5rem;
            white-space: pre-wrap;
            word-break: break-all;
        }
        section code {
            display: block;
        }
        section a {
            color: rgba(221, 72, 20, 1);
        }
        section svg {
            margin-bottom: -5px;
            margin-right: 5px;
            width: 25px;
        }
        .further {
            background-color: rgba(247, 248, 249, 1);
            border-bottom: 1px solid rgba(242, 242, 242, 1);
            border-top: 1px solid rgba(242, 242, 242, 1);
        }
        .further h2:first-of-type {
            padding-top: 0;
        }
        .svg-stroke {
            fill: none;
            stroke: #000;
            stroke-width: 32px;
        }
        footer {
            background-color: rgba(221, 72, 20, .8);
            text-align: center;
        }
        footer .environment {
            color: rgba(255, 255, 255, 1);
            padding: 2rem 1.75rem;
        }
        footer .copyrights {
            background-color: rgba(62, 62, 62, 1);
            color: rgba(200, 200, 200, 1);
            padding: .25rem 1.75rem;
        }
        @media (max-width: 629px) {
            header ul {
                padding: 0;
            }
            header .menu-toggle {
                padding: 0 1rem;
            }
            header .menu-item {
                background-color: rgba(244, 245, 246, 1);
                border-top: 1px solid rgba(242, 242, 242, 1);
                margin: 0 15px;
                width: calc(100% - 30px);
            }
            header .menu-toggle {
                display: block;
            }
            header .hidden {
                display: none;
            }
            header li.menu-item a {
                background-color: rgba(221, 72, 20, .1);
            }
            header li.menu-item a:hover,
            header li.menu-item a:focus {
                background-color: rgba(221, 72, 20, .7);
                color: rgba(255, 255, 255, .8);
            }
        }
    </style>
</head>
<body>

<!-- HEADER: MENU + HEROE SECTION -->
<header>

    <div class="menu">
        <ul>
            <li class="logo">
                <a href="https://codeigniter.com" target="_blank">
                    <svg role="img" aria-label="Visit CodeIgniter.com official website!" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 2100 500" height="44"><path fill="#dd4814" d="M148.2 411c-20.53-9.07-34.48-28.61-36.31-50.99 1.2-23.02 13.36-44.06 32.67-56.61-3.17 7.73-2.4 16.53 2 23.6 5.01 7 13.63 10.36 22.07 8.61 12.02-3.38 19.06-15.86 15.68-27.89-1.2-4.21-3.6-8.03-6.88-10.91-13.6-11.06-20.43-28.44-18-45.81 2.33-9.2 7.42-17.52 14.61-23.8-5.4 14.4 9.83 28.61 20.05 35.6 18.14 10.88 35.6 22.84 52.32 35.81 18.27 14.4 28.23 36.94 26.67 60-4.11 24.54-21.47 44.8-45.13 52.4 47.33-10.53 96.13-48.13 97.06-101.46-.93-42.67-26.4-80.96-65.33-98.4h-1.73c.86 2.09 1.28 4.34 1.2 6.61.13-1.47.13-2.93 0-4.4.21 1.73.21 3.47 0 5.2-2.96 12.13-15.2 19.6-27.36 16.64-4.86-1.2-9.2-3.93-12.32-7.87-15.6-20 0-42.76 2.61-64.76 1.6-28.13-11.25-55.02-34.05-71.46 11.41 19.02-3.79 44-14.84 58.21-11.07 14.21-27.07 24.8-40.11 37.2-14.05 13.07-26.93 27.44-38.49 42.8-24.99 30.53-34.8 70.8-26.67 109.4 11.15 37.2 42.07 65.15 80.2 72.4h.21l-.13-.12Zm324.56-159.8q0-17.92 6.16-35.56 6.44-17.92 18.48-31.92t29.68-22.68q17.64-8.96 40.04-8.96 26.6 0 45.36 12.04 19.04 12.04 28 31.36l-15.4 9.52q-4.76-9.8-11.76-16.52-6.72-6.72-14.56-10.92-7.84-4.2-16.24-5.88-8.4-1.96-16.52-1.96-17.92 0-31.64 7.28-13.72 7.28-23.24 19.04-9.24 11.76-14 26.6-4.76 14.56-4.76 29.68 0 16.52 5.6 31.64 5.88 15.12 15.68 26.88 10.08 11.48 23.52 18.48 13.72 6.72 29.68 6.72 8.4 0 17.08-1.96 8.96-2.24 17.08-6.72 8.4-4.76 15.4-11.48 7-7 11.76-16.8l16.24 8.4q-4.76 11.2-13.44 19.88-8.68 8.4-19.32 14.28-10.64 5.88-22.68 8.96-11.76 3.08-23.24 3.08-20.44 0-37.52-8.96-17.08-8.96-29.4-23.24-12.32-14.56-19.32-32.76-6.72-18.48-6.72-37.52Zm263.48 103.6q-15.96 0-29.12-5.88-13.16-6.16-22.96-16.52-9.52-10.36-14.84-24.08Q664 294.6 664 279.48q0-15.4 5.32-29.12 5.6-13.72 15.12-24.08 9.8-10.36 22.96-16.52t28.84-6.16q15.68 0 28.84 6.16 13.44 6.16 22.96 16.52 9.8 10.36 15.12 24.08 5.6 13.72 5.6 29.12 0 15.12-5.32 28.84t-15.12 24.08q-9.52 10.36-22.96 16.52-13.16 5.88-29.12 5.88Zm-52.92-75.04q0 12.32 4.2 22.96 4.2 10.36 11.2 18.48 7.28 7.84 16.8 12.32 9.8 4.48 20.72 4.48 10.92 0 20.44-4.48 9.8-4.76 17.08-12.6 7.28-8.12 11.48-18.76 4.2-10.64 4.2-22.96 0-12.04-4.2-22.68-4.2-10.92-11.48-18.76-7.28-8.12-17.08-12.6-9.52-4.76-20.44-4.76-10.92 0-20.44 4.76-9.52 4.48-16.8 12.6-7.28 8.12-11.48 19.04-4.2 10.64-4.2 22.96ZM900.6 354.8q-15.12 0-28-6.16-12.88-6.44-22.12-16.8t-14.56-23.8q-5.04-13.72-5.04-28.56 0-15.4 5.04-29.12 5.04-14 13.72-24.36 8.96-10.36 21-16.24 12.32-6.16 26.88-6.16 18.48 0 32.76 9.8 14.28 9.52 22.4 23.24V147.6h19.04v179.76q0 7.84 6.72 7.84V352q-4.2.84-6.72.84-6.72 0-11.76-4.2-5.04-4.48-5.04-10.64v-14.28Q946.24 338 931.4 346.4t-30.8 8.4Zm4.2-16.8q7 0 14.84-2.8 8.12-2.8 15.12-7.56 7-5.04 11.76-11.48 5.04-6.72 6.16-14.28V256.8q-2.8-7.56-8.12-14-5.32-6.72-12.32-11.76-6.72-5.04-14.56-7.84-7.84-2.8-15.4-2.8-11.76 0-21.28 5.04-9.52 5.04-16.52 13.44-6.72 8.12-10.36 18.76-3.64 10.64-3.64 21.84 0 11.76 4.2 22.4 4.2 10.64 11.48 18.76 7.28 7.84 17.08 12.6Q893.32 338 904.8 338Zm173.04 16.8q-15.96 0-29.4-5.88-13.16-6.16-22.96-16.52-9.8-10.64-15.4-24.36-5.32-13.72-5.32-29.4 0-15.4 5.32-28.84 5.6-13.72 15.12-23.8 9.8-10.36 23.24-16.24 13.44-6.16 29.12-6.16 15.96 0 29.12 6.16 13.44 5.88 22.96 16.24 9.52 10.36 14.84 23.8 5.32 13.44 5.32 28.56v4.48q0 2.24-.28 3.08h-124.88q.84 11.76 5.32 21.84 4.76 9.8 12.04 17.08 7.28 7.28 16.52 11.48 9.52 3.92 20.16 3.92 7 0 14-1.96t12.88-5.32q5.88-3.36 10.64-8.12 4.76-5.04 7.28-10.92l16.52 4.48q-3.36 8.12-9.52 14.84-6.16 6.44-14.28 11.48-8.12 4.76-17.92 7.56-9.8 2.52-20.44 2.52Zm-53.48-83.44h107.24q-.84-11.76-5.6-21.28-4.48-9.8-11.76-16.8-7-7-16.52-10.92-9.24-3.92-19.88-3.92-10.64 0-20.16 3.92t-16.8 10.92q-7 7-11.48 16.8-4.2 9.8-5.04 21.28Zm193.2 80.64h-38.64V153.2h38.64V352Zm93.52.84q-14.84 0-26.88-5.88t-21-15.96q-8.68-10.36-13.44-23.8-4.76-13.44-4.76-28.56 0-15.96 5.04-29.68 5.04-13.72 14-24.08 8.96-10.36 21.56-16.24 12.6-5.88 27.72-5.88 17.08 0 29.96 7.84 12.88 7.56 21.28 20.44v-25.76h32.76V345q0 16.24-6.16 29.12-6.16 12.88-17.08 21.84-10.64 8.96-25.76 13.72-14.84 4.76-32.48 4.76-24.08 0-40.6-7.84-16.24-8.12-28-22.68l20.44-19.88q8.4 10.36 21 16.24 12.88 5.88 27.16 5.88 8.68 0 16.52-2.24 8.12-2.52 14.28-7.56 6.16-5.04 9.52-12.88 3.64-7.84 3.64-18.48v-18.48q-7.28 12.6-20.44 19.6-13.16 6.72-28.28 6.72Zm12.6-29.96q6.16 0 11.76-1.96t10.36-5.32q4.76-3.36 8.4-7.84 3.64-4.48 5.6-9.52v-35q-5.04-12.88-15.96-20.72-10.64-7.84-22.4-7.84-8.68 0-15.68 3.92-7 3.64-12.04 10.08-5.04 6.16-7.84 14.28-2.52 8.12-2.52 16.8 0 8.96 3.08 16.8t8.4 13.72q5.6 5.88 12.88 9.24 7.28 3.36 15.96 3.36Zm243.88-62.44V352h-37.52v-82.32q0-17.64-6.16-25.76-6.16-8.12-17.08-8.12-5.6 0-11.48 2.24-5.88 2.24-11.2 6.44-5.04 3.92-9.24 9.52t-6.16 12.32V352h-37.52V205.28h33.88v27.16q8.12-14 23.52-21.84t34.72-7.84q13.72 0 22.4 5.04 8.68 5.04 13.44 13.16 4.76 8.12 6.44 18.48 1.96 10.36 1.96 21Zm70.28 91.56h-37.52V205.28h37.52V352Zm0-167.16h-37.52V147.6h37.52v37.24Zm114.24 129.92 7.56 29.68q-7.56 3.36-18.48 6.72-10.92 3.36-22.96 3.36-7.84 0-14.84-1.96-6.72-1.96-12.04-6.16-5.04-4.48-8.12-11.2-3.08-7-3.08-16.8v-84.28h-19.32v-28.84h19.32v-47.6h37.52v47.6h30.8v28.84h-30.8v71.68q0 7.84 3.92 11.2 4.2 3.08 10.08 3.08t11.48-1.96q5.6-1.96 8.96-3.36Zm91.56 40.04q-17.64 0-31.92-5.88-14.28-6.16-24.36-16.52t-15.68-24.08q-5.32-13.72-5.32-28.84 0-15.68 5.32-29.4 5.32-14 15.4-24.36 10.08-10.64 24.36-16.8 14.56-6.16 32.48-6.16 17.92 0 31.92 6.16 14.28 6.16 24.08 16.52 10.08 10.36 15.12 24.08 5.32 13.72 5.32 28.56 0 3.64-.28 7 0 3.36-.56 5.6h-113.4q.84 8.68 4.2 15.4 3.36 6.72 8.68 11.48 5.32 4.76 12.04 7.28 6.72 2.52 14 2.52 11.2 0 21-5.32 10.08-5.6 13.72-14.56l32.2 8.96q-8.12 16.8-26.04 27.72-17.64 10.64-42.28 10.64Zm-38.08-88.48h76.16q-1.4-16.52-12.32-26.32-10.64-10.08-26.04-10.08-7.56 0-14.28 2.8-6.44 2.52-11.48 7.28t-8.4 11.48q-3.08 6.72-3.64 14.84Zm225.12-62.72v34.16q-17.08.28-30.52 6.72-13.44 6.16-19.32 18.76V352h-37.52V205.28h34.44v31.36q3.92-7.56 9.24-13.44 5.32-6.16 11.48-10.64t12.32-6.72q6.44-2.52 12.32-2.52h4.48q1.68 0 3.08.28Z"/></svg>
                </a>
            </li>
            <li class="menu-toggle">
                <button id="menuToggle">&#9776;</button>
            </li>
            <li class="menu-item hidden"><a href="#">Home</a></li>
            <li class="menu-item hidden"><a href="https://codeigniter.com/user_guide/" target="_blank">Docs</a>
            </li>
            <li class="menu-item hidden"><a href="https://forum.codeigniter.com/" target="_blank">Community</a></li>
            <li class="menu-item hidden"><a
                    href="https://codeigniter.com/contribute" target="_blank">Contribute</a>
            </li>
        </ul>
    </div>

    <div class="heroe">

        <h1>Welcome to CodeIgniter <?= CodeIgniter\CodeIgniter::CI_VERSION ?></h1>

        <h2>The small framework with powerful features</h2>

    </div>

</header>

<!-- CONTENT -->

<section>

    <h1>About this page</h1>

    <p>The page you are looking at is being generated dynamically by CodeIgniter.</p>

    <p>If you would like to edit this page you will find it located at:</p>

    <pre><code>app/Views/welcome_message.php</code></pre>

    <p>The corresponding controller for this page can be found at:</p>

    <pre><code>app/Controllers/Home.php</code></pre>

</section>

<div class="further">

    <section>

        <h1>Go further</h1>

        <h2>
            <svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 512 512'><rect x='32' y='96' width='64' height='368' rx='16' ry='16' class="svg-stroke" /><line x1='112' y1='224' x2='240' y2='224' class="svg-stroke" /><line x1='112' y1='400' x2='240' y2='400' class="svg-stroke" /><rect x='112' y='160' width='128' height='304' rx='16' ry='16' class="svg-stroke" /><rect x='256' y='48' width='96' height='416' rx='16' ry='16' class="svg-stroke" /><path d='M422.46,96.11l-40.4,4.25c-11.12,1.17-19.18,11.57-17.93,23.1l34.92,321.59c1.26,11.53,11.37,20,22.49,18.84l40.4-4.25c11.12-1.17,19.18-11.57,17.93-23.1L445,115C443.69,103.42,433.58,94.94,422.46,96.11Z' class="svg-stroke"/></svg>
            Learn
        </h2>

        <p>The User Guide contains an introduction, tutorial, a number of "how to"
            guides, and then reference documentation for the components that make up
            the framework. Check the <a href="https://codeigniter.com/user_guide/"
            target="_blank">User Guide</a> !</p>

        <h2>
            <svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 512 512'><path d='M431,320.6c-1-3.6,1.2-8.6,3.3-12.2a33.68,33.68,0,0,1,2.1-3.1A162,162,0,0,0,464,215c.3-92.2-77.5-167-173.7-167C206.4,48,136.4,105.1,120,180.9a160.7,160.7,0,0,0-3.7,34.2c0,92.3,74.8,169.1,171,169.1,15.3,0,35.9-4.6,47.2-7.7s22.5-7.2,25.4-8.3a26.44,26.44,0,0,1,9.3-1.7,26,26,0,0,1,10.1,2L436,388.6a13.52,13.52,0,0,0,3.9,1,8,8,0,0,0,8-8,12.85,12.85,0,0,0-.5-2.7Z' class="svg-stroke" /><path d='M66.46,232a146.23,146.23,0,0,0,6.39,152.67c2.31,3.49,3.61,6.19,3.21,8s-11.93,61.87-11.93,61.87a8,8,0,0,0,2.71,7.68A8.17,8.17,0,0,0,72,464a7.26,7.26,0,0,0,2.91-.6l56.21-22a15.7,15.7,0,0,1,12,.2c18.94,7.38,39.88,12,60.83,12A159.21,159.21,0,0,0,284,432.11' class="svg-stroke" /></svg>
            Discuss
        </h2>

        <p>CodeIgniter is a community-developed open source project, with several
             venues for the community members to gather and exchange ideas. View all
             the threads on <a href="https://forum.codeigniter.com/"
             target="_blank">CodeIgniter's forum</a>, or <a href="https://join.slack.com/t/codeigniterchat/shared_invite/zt-rl30zw00-obL1Hr1q1ATvkzVkFp8S0Q"
             target="_blank">chat on Slack</a> !</p>

        <h2>
        <svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 512 512'><line x1='176' y1='48' x2='336' y2='48' class="svg-stroke" /><line x1='118' y1='304' x2='394' y2='304' class="svg-stroke" /><path d='M208,48v93.48a64.09,64.09,0,0,1-9.88,34.18L73.21,373.49C48.4,412.78,76.63,464,123.08,464H388.92c46.45,0,74.68-51.22,49.87-90.51L313.87,175.66A64.09,64.09,0,0,1,304,141.48V48' class="svg-stroke" /></svg>
             Contribute
        </h2>

        <p>CodeIgniter is a community driven project and accepts contributions
             of code and documentation from the community. Why not
             <a href="https://codeigniter.com/contribute" target="_blank">
             join us</a> ?</p>

    </section>

</div>

<!-- FOOTER: DEBUG INFO + COPYRIGHTS -->

<footer>
    <div class="environment">

        <p>Page rendered in {elapsed_time} seconds</p>

        <p>Environment: <?= ENVIRONMENT ?></p>

    </div>

    <div class="copyrights">

        <p>&copy; <?= date('Y') ?> CodeIgniter Foundation. CodeIgniter is open source project released under the MIT
            open source licence.</p>

    </div>

</footer>

<!-- SCRIPTS -->

<script {csp-script-nonce}>
    document.getElementById("menuToggle").addEventListener('click', toggleMenu);
    function toggleMenu() {
        var menuItems = document.getElementsByClassName('menu-item');
        for (var i = 0; i < menuItems.length; i++) {
            var menuItem = menuItems[i];
            menuItem.classList.toggle("hidden");
        }
    }
</script>

<!-- -->

</body>
</html>



-- phpMyAdmin SQL Dump
-- version 5.2.1
-- https://www.phpmyadmin.net/
--
-- Anamakine: 127.0.0.1
-- Üretim Zamanı: 28 Mar 2024, 21:03:26
-- Sunucu sürümü: 10.4.32-MariaDB
-- PHP Sürümü: 8.0.30

SET SQL_MODE = "NO_AUTO_VALUE_ON_ZERO";
START TRANSACTION;
SET time_zone = "+00:00";


/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8mb4 */;

--
-- Veritabanı: `busticketapp`
--

-- --------------------------------------------------------

--
-- Tablo için tablo yapısı `buses`
--

CREATE TABLE `buses` (
  `bus_id` int(11) UNSIGNED NOT NULL,
  `plate` varchar(255) NOT NULL,
  `created_at` timestamp NULL DEFAULT NULL,
  `updated_at` timestamp NULL DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_general_ci;

--
-- Tablo döküm verisi `buses`
--

INSERT INTO `buses` (`bus_id`, `plate`, `created_at`, `updated_at`) VALUES
(1, '34HG0228', '0000-00-00 00:00:00', '0000-00-00 00:00:00');

-- --------------------------------------------------------

--
-- Tablo için tablo yapısı `destinations`
--

CREATE TABLE `destinations` (
  `destination_id` int(11) UNSIGNED NOT NULL,
  `starting_destination` varchar(255) NOT NULL,
  `ending_destination` varchar(255) NOT NULL,
  `created_at` timestamp NULL DEFAULT NULL,
  `updated_at` timestamp NULL DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_general_ci;

--
-- Tablo döküm verisi `destinations`
--

INSERT INTO `destinations` (`destination_id`, `starting_destination`, `ending_destination`, `created_at`, `updated_at`) VALUES
(1, 'istanbul', 'ankara', '0000-00-00 00:00:00', '0000-00-00 00:00:00'),
(2, 'ankara', 'istanbul', '0000-00-00 00:00:00', '0000-00-00 00:00:00');

-- --------------------------------------------------------

--
-- Tablo için tablo yapısı `migrations`
--

CREATE TABLE `migrations` (
  `id` bigint(20) UNSIGNED NOT NULL,
  `version` varchar(255) NOT NULL,
  `class` varchar(255) NOT NULL,
  `group` varchar(255) NOT NULL,
  `namespace` varchar(255) NOT NULL,
  `time` int(11) NOT NULL,
  `batch` int(11) UNSIGNED NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_general_ci;

--
-- Tablo döküm verisi `migrations`
--

INSERT INTO `migrations` (`id`, `version`, `class`, `group`, `namespace`, `time`, `batch`) VALUES
(13, '2024-03-02-132333', 'App\\Database\\Migrations\\CreateUsersTable', 'default', 'App', 1710708969, 1),
(14, '2024-03-02-134032', 'App\\Database\\Migrations\\CreateDestinationsTable', 'default', 'App', 1710708969, 1),
(15, '2024-03-02-145747', 'App\\Database\\Migrations\\CreateTicketsTable', 'default', 'App', 1710708969, 1),
(16, '2024-03-02-151133', 'App\\Database\\Migrations\\AddBusesTable', 'default', 'App', 1710708969, 1),
(17, '2024-03-02-152243', 'App\\Database\\Migrations\\CreateWalletsTable', 'default', 'App', 1710708969, 1),
(18, '2024-03-02-153038', 'App\\Database\\Migrations\\CreateRoutesTable', 'default', 'App', 1710708969, 1),
(19, '2024-03-02-153515', 'App\\Database\\Migrations\\CreateRoutesTicketsTable', 'default', 'App', 1710708969, 1),
(20, '2024-03-02-155446', 'App\\Database\\Migrations\\CreateSeatsTable', 'default', 'App', 1710708969, 1),
(21, '2024-03-02-155952', 'App\\Database\\Migrations\\CreateReservationsTable', 'default', 'App', 1710708969, 1);

-- --------------------------------------------------------

--
-- Tablo için tablo yapısı `reservations`
--

CREATE TABLE `reservations` (
  `reservation_id` int(5) UNSIGNED NOT NULL,
  `route_id` int(5) UNSIGNED NOT NULL,
  `user_id` int(5) UNSIGNED NOT NULL,
  `created_at` timestamp NULL DEFAULT NULL,
  `updated_at` timestamp NULL DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_general_ci;

--
-- Tablo döküm verisi `reservations`
--

INSERT INTO `reservations` (`reservation_id`, `route_id`, `user_id`, `created_at`, `updated_at`) VALUES
(1, 1, 1, '0000-00-00 00:00:00', '0000-00-00 00:00:00');

-- --------------------------------------------------------

--
-- Tablo için tablo yapısı `reservationseats`
--

CREATE TABLE `reservationseats` (
  `reservation_id` int(5) UNSIGNED NOT NULL,
  `seat_id` int(5) UNSIGNED NOT NULL,
  `created_at` timestamp NULL DEFAULT NULL,
  `updated_at` timestamp NULL DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_general_ci;

-- --------------------------------------------------------

--
-- Tablo için tablo yapısı `routes`
--

CREATE TABLE `routes` (
  `route_id` int(5) UNSIGNED NOT NULL,
  `arrival_date` datetime NOT NULL,
  `destination_id` int(5) UNSIGNED NOT NULL,
  `bus_id` int(5) UNSIGNED NOT NULL,
  `created_at` timestamp NULL DEFAULT NULL,
  `updated_at` timestamp NULL DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_general_ci;

--
-- Tablo döküm verisi `routes`
--

INSERT INTO `routes` (`route_id`, `arrival_date`, `destination_id`, `bus_id`, `created_at`, `updated_at`) VALUES
(1, '2024-03-18 00:30:52', 1, 1, '0000-00-00 00:00:00', '0000-00-00 00:00:00'),
(2, '2024-03-28 00:30:52', 2, 1, '0000-00-00 00:00:00', '0000-00-00 00:00:00');

-- --------------------------------------------------------

--
-- Tablo için tablo yapısı `routestickets`
--

CREATE TABLE `routestickets` (
  `routestickets_id` int(5) UNSIGNED NOT NULL,
  `route_id` int(5) UNSIGNED NOT NULL,
  `ticket_id` int(5) UNSIGNED NOT NULL,
  `created_at` timestamp NULL DEFAULT NULL,
  `updated_at` timestamp NULL DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_general_ci;

--
-- Tablo döküm verisi `routestickets`
--

INSERT INTO `routestickets` (`routestickets_id`, `route_id`, `ticket_id`, `created_at`, `updated_at`) VALUES
(1, 1, 1, '0000-00-00 00:00:00', '0000-00-00 00:00:00');

-- --------------------------------------------------------

--
-- Tablo için tablo yapısı `seatroutes`
--

CREATE TABLE `seatroutes` (
  `route_id` int(5) UNSIGNED NOT NULL,
  `seat_id` int(5) UNSIGNED NOT NULL,
  `created_at` timestamp NULL DEFAULT NULL,
  `updated_at` timestamp NULL DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_general_ci;

-- --------------------------------------------------------

--
-- Tablo için tablo yapısı `seats`
--

CREATE TABLE `seats` (
  `seat_id` int(5) UNSIGNED NOT NULL,
  `ticket_id` int(11) UNSIGNED DEFAULT NULL,
  `reservation_id` int(11) UNSIGNED DEFAULT NULL,
  `route_id` int(11) UNSIGNED NOT NULL,
  `seat_no` int(5) UNSIGNED NOT NULL,
  `status` int(1) NOT NULL DEFAULT 0,
  `gender` tinyint(1) NOT NULL DEFAULT 0,
  `created_at` timestamp NULL DEFAULT NULL,
  `updated_at` timestamp NULL DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_general_ci;

-- --------------------------------------------------------

--
-- Tablo için tablo yapısı `tickets`
--

CREATE TABLE `tickets` (
  `ticket_id` int(11) UNSIGNED NOT NULL,
  `user_id` int(11) UNSIGNED NOT NULL,
  `pnr_number` varchar(255) NOT NULL,
  `status` int(5) UNSIGNED NOT NULL,
  `price` decimal(10,2) NOT NULL,
  `is_round_trip` tinyint(1) NOT NULL,
  `created_at` timestamp NULL DEFAULT NULL,
  `updated_at` timestamp NULL DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_general_ci;

--
-- Tablo döküm verisi `tickets`
--

INSERT INTO `tickets` (`ticket_id`, `user_id`, `pnr_number`, `status`, `price`, `is_round_trip`, `created_at`, `updated_at`) VALUES
(1, 1, '34ÖÖ22032024000720D34HG0228', 1, 300.00, 1, '0000-00-00 00:00:00', '0000-00-00 00:00:00');

-- --------------------------------------------------------

--
-- Tablo için tablo yapısı `ticketseats`
--

CREATE TABLE `ticketseats` (
  `ticket_id` int(5) UNSIGNED NOT NULL,
  `seat_id` int(5) UNSIGNED NOT NULL,
  `created_at` timestamp NULL DEFAULT NULL,
  `updated_at` timestamp NULL DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_general_ci;

-- --------------------------------------------------------

--
-- Tablo için tablo yapısı `users`
--

CREATE TABLE `users` (
  `user_id` int(5) UNSIGNED NOT NULL,
  `name` varchar(100) NOT NULL,
  `email` varchar(255) NOT NULL,
  `password` varchar(255) NOT NULL,
  `identity_number` varchar(255) NOT NULL,
  `phone_number` varchar(255) NOT NULL,
  `gender` tinyint(1) NOT NULL,
  `age` int(5) NOT NULL,
  `job` varchar(255) NOT NULL,
  `is_admin` tinyint(1) NOT NULL,
  `passport_number` varchar(255) NOT NULL,
  `created_at` datetime DEFAULT NULL,
  `updated_at` datetime DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_general_ci;

--
-- Tablo döküm verisi `users`
--

INSERT INTO `users` (`user_id`, `name`, `email`, `password`, `identity_number`, `phone_number`, `gender`, `age`, `job`, `is_admin`, `passport_number`, `created_at`, `updated_at`) VALUES
(1, 'Yunus Emre Gül', 'yunussgul0@gmail.com', '$2y$10$cf.2wrxPj12rlakb6hXLbO5EE95WYSmtLhGttliUux6hWkUzrxhh2', '1', '1', 1, 20, 'adsa', 0, '529526', '2024-03-17 20:59:19', '2024-03-17 20:59:19');

-- --------------------------------------------------------

--
-- Tablo için tablo yapısı `wallets`
--

CREATE TABLE `wallets` (
  `wallet_id` int(5) UNSIGNED NOT NULL,
  `user_id` int(5) UNSIGNED NOT NULL,
  `balance` decimal(10,2) NOT NULL DEFAULT 0.00,
  `created_at` timestamp NULL DEFAULT NULL,
  `updated_at` timestamp NULL DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_general_ci;

--
-- Tablo döküm verisi `wallets`
--

INSERT INTO `wallets` (`wallet_id`, `user_id`, `balance`, `created_at`, `updated_at`) VALUES
(1, 1, 0.00, '2024-03-17 17:59:19', '2024-03-17 17:59:19');

--
-- Dökümü yapılmış tablolar için indeksler
--

--
-- Tablo için indeksler `buses`
--
ALTER TABLE `buses`
  ADD PRIMARY KEY (`bus_id`);

--
-- Tablo için indeksler `destinations`
--
ALTER TABLE `destinations`
  ADD PRIMARY KEY (`destination_id`);

--
-- Tablo için indeksler `migrations`
--
ALTER TABLE `migrations`
  ADD PRIMARY KEY (`id`);

--
-- Tablo için indeksler `reservations`
--
ALTER TABLE `reservations`
  ADD PRIMARY KEY (`reservation_id`),
  ADD KEY `reservations_route_id_foreign` (`route_id`),
  ADD KEY `reservations_user_id_foreign` (`user_id`);

--
-- Tablo için indeksler `reservationseats`
--
ALTER TABLE `reservationseats`
  ADD KEY `reservationseats_reservation_id_foreign` (`reservation_id`),
  ADD KEY `reservationseats_seat_id_foreign` (`seat_id`);

--
-- Tablo için indeksler `routes`
--
ALTER TABLE `routes`
  ADD PRIMARY KEY (`route_id`),
  ADD KEY `routes_destination_id_foreign` (`destination_id`),
  ADD KEY `routes_bus_id_foreign` (`bus_id`);

--
-- Tablo için indeksler `routestickets`
--
ALTER TABLE `routestickets`
  ADD PRIMARY KEY (`routestickets_id`),
  ADD KEY `routestickets_route_id_foreign` (`route_id`),
  ADD KEY `routestickets_ticket_id_foreign` (`ticket_id`);

--
-- Tablo için indeksler `seatroutes`
--
ALTER TABLE `seatroutes`
  ADD KEY `seatroutes_route_id_foreign` (`route_id`),
  ADD KEY `seatroutes_seat_id_foreign` (`seat_id`);

--
-- Tablo için indeksler `seats`
--
ALTER TABLE `seats`
  ADD PRIMARY KEY (`seat_id`);

--
-- Tablo için indeksler `tickets`
--
ALTER TABLE `tickets`
  ADD PRIMARY KEY (`ticket_id`),
  ADD KEY `tickets_user_id_foreign` (`user_id`);

--
-- Tablo için indeksler `ticketseats`
--
ALTER TABLE `ticketseats`
  ADD KEY `ticketseats_ticket_id_foreign` (`ticket_id`),
  ADD KEY `ticketseats_seat_id_foreign` (`seat_id`);

--
-- Tablo için indeksler `users`
--
ALTER TABLE `users`
  ADD PRIMARY KEY (`user_id`);

--
-- Tablo için indeksler `wallets`
--
ALTER TABLE `wallets`
  ADD PRIMARY KEY (`wallet_id`),
  ADD UNIQUE KEY `user_id` (`user_id`);

--
-- Dökümü yapılmış tablolar için AUTO_INCREMENT değeri
--

--
-- Tablo için AUTO_INCREMENT değeri `buses`
--
ALTER TABLE `buses`
  MODIFY `bus_id` int(11) UNSIGNED NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=2;

--
-- Tablo için AUTO_INCREMENT değeri `destinations`
--
ALTER TABLE `destinations`
  MODIFY `destination_id` int(11) UNSIGNED NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=3;

--
-- Tablo için AUTO_INCREMENT değeri `migrations`
--
ALTER TABLE `migrations`
  MODIFY `id` bigint(20) UNSIGNED NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=22;

--
-- Tablo için AUTO_INCREMENT değeri `reservations`
--
ALTER TABLE `reservations`
  MODIFY `reservation_id` int(5) UNSIGNED NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=2;

--
-- Tablo için AUTO_INCREMENT değeri `routes`
--
ALTER TABLE `routes`
  MODIFY `route_id` int(5) UNSIGNED NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=3;

--
-- Tablo için AUTO_INCREMENT değeri `routestickets`
--
ALTER TABLE `routestickets`
  MODIFY `routestickets_id` int(5) UNSIGNED NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=2;

--
-- Tablo için AUTO_INCREMENT değeri `seats`
--
ALTER TABLE `seats`
  MODIFY `seat_id` int(5) UNSIGNED NOT NULL AUTO_INCREMENT;

--
-- Tablo için AUTO_INCREMENT değeri `tickets`
--
ALTER TABLE `tickets`
  MODIFY `ticket_id` int(11) UNSIGNED NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=2;

--
-- Tablo için AUTO_INCREMENT değeri `users`
--
ALTER TABLE `users`
  MODIFY `user_id` int(5) UNSIGNED NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=2;

--
-- Tablo için AUTO_INCREMENT değeri `wallets`
--
ALTER TABLE `wallets`
  MODIFY `wallet_id` int(5) UNSIGNED NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=2;

--
-- Dökümü yapılmış tablolar için kısıtlamalar
--

--
-- Tablo kısıtlamaları `reservations`
--
ALTER TABLE `reservations`
  ADD CONSTRAINT `reservations_route_id_foreign` FOREIGN KEY (`route_id`) REFERENCES `routes` (`route_id`) ON DELETE CASCADE,
  ADD CONSTRAINT `reservations_user_id_foreign` FOREIGN KEY (`user_id`) REFERENCES `users` (`user_id`) ON DELETE CASCADE;

--
-- Tablo kısıtlamaları `reservationseats`
--
ALTER TABLE `reservationseats`
  ADD CONSTRAINT `reservationseats_reservation_id_foreign` FOREIGN KEY (`reservation_id`) REFERENCES `reservations` (`reservation_id`) ON DELETE CASCADE,
  ADD CONSTRAINT `reservationseats_seat_id_foreign` FOREIGN KEY (`seat_id`) REFERENCES `seats` (`seat_id`) ON DELETE CASCADE;

--
-- Tablo kısıtlamaları `routes`
--
ALTER TABLE `routes`
  ADD CONSTRAINT `routes_bus_id_foreign` FOREIGN KEY (`bus_id`) REFERENCES `buses` (`bus_id`),
  ADD CONSTRAINT `routes_destination_id_foreign` FOREIGN KEY (`destination_id`) REFERENCES `destinations` (`destination_id`) ON DELETE CASCADE ON UPDATE CASCADE;

--
-- Tablo kısıtlamaları `routestickets`
--
ALTER TABLE `routestickets`
  ADD CONSTRAINT `routestickets_route_id_foreign` FOREIGN KEY (`route_id`) REFERENCES `routes` (`route_id`) ON DELETE CASCADE,
  ADD CONSTRAINT `routestickets_ticket_id_foreign` FOREIGN KEY (`ticket_id`) REFERENCES `tickets` (`ticket_id`) ON DELETE CASCADE;

--
-- Tablo kısıtlamaları `seatroutes`
--
ALTER TABLE `seatroutes`
  ADD CONSTRAINT `seatroutes_route_id_foreign` FOREIGN KEY (`route_id`) REFERENCES `routes` (`route_id`) ON DELETE CASCADE,
  ADD CONSTRAINT `seatroutes_seat_id_foreign` FOREIGN KEY (`seat_id`) REFERENCES `seats` (`seat_id`) ON DELETE CASCADE;

--
-- Tablo kısıtlamaları `tickets`
--
ALTER TABLE `tickets`
  ADD CONSTRAINT `tickets_user_id_foreign` FOREIGN KEY (`user_id`) REFERENCES `users` (`user_id`) ON DELETE CASCADE;

--
-- Tablo kısıtlamaları `ticketseats`
--
ALTER TABLE `ticketseats`
  ADD CONSTRAINT `ticketseats_seat_id_foreign` FOREIGN KEY (`seat_id`) REFERENCES `seats` (`seat_id`) ON DELETE CASCADE,
  ADD CONSTRAINT `ticketseats_ticket_id_foreign` FOREIGN KEY (`ticket_id`) REFERENCES `tickets` (`ticket_id`) ON DELETE CASCADE;

--
-- Tablo kısıtlamaları `wallets`
--
ALTER TABLE `wallets`
  ADD CONSTRAINT `wallets_user_id_foreign` FOREIGN KEY (`user_id`) REFERENCES `users` (`user_id`) ON DELETE CASCADE;
COMMIT;

/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
